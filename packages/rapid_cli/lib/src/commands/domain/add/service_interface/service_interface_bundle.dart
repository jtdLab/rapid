// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint, implicit_dynamic_list_literal, implicit_dynamic_map_literal, inference_failure_on_collection_literal

import 'package:mason/mason.dart';

final serviceInterfaceBundle = MasonBundle.fromJson(<String, dynamic>{"files":[{"path":"packages/{{project_name}}/{{project_name}}_domain/lib/{{{output_dir}}}/{{name.snakeCase()}}/i_{{name.snakeCase()}}_service.dart","data":"aW1wb3J0ICdwYWNrYWdlOmRhcnR6L2RhcnR6LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZnJlZXplZF9hbm5vdGF0aW9uL2ZyZWV6ZWRfYW5ub3RhdGlvbi5kYXJ0JzsKCnBhcnQgJ3t7I3NuYWtlQ2FzZX19aV97e25hbWV9fV9zZXJ2aWNle3svc25ha2VDYXNlfX0uZnJlZXplZC5kYXJ0JzsKCi8vIFRPRE86IERlc2NyaXB0aW9uCmFic3RyYWN0IGNsYXNzIEl7e25hbWUucGFzY2FsQ2FzZSgpfX1TZXJ2aWNlIHsKICBFaXRoZXI8e3tuYW1lLnBhc2NhbENhc2UoKX19U2VydmljZU1ldGhvZDFGYWlsdXJlLCBkeW5hbWljPiBtZXRob2QxKCk7CiAgRnV0dXJlPEVpdGhlcjx7e25hbWUucGFzY2FsQ2FzZSgpfX1TZXJ2aWNlTWV0aG9kMkZhaWx1cmUsIGR5bmFtaWM+PiBtZXRob2QyKCk7Cn0KCi8vLyBGYWlsdXJlIHVuaW9uIHRoYXQgYmVsb25ncyB0byBbSXt7bmFtZS5wYXNjYWxDYXNlKCl9fVNlcnZpY2UubWV0aG9kMV0uCkBmcmVlemVkCmNsYXNzIHt7bmFtZS5wYXNjYWxDYXNlKCl9fVNlcnZpY2VNZXRob2QxRmFpbHVyZSB3aXRoIF8ke3tuYW1lLnBhc2NhbENhc2UoKX19U2VydmljZU1ldGhvZDFGYWlsdXJlIHsKICBjb25zdCBmYWN0b3J5IHt7bmFtZS5wYXNjYWxDYXNlKCl9fVNlcnZpY2VNZXRob2QxRmFpbHVyZS5mYWlsdXJlQSgpID0KICAgICAgX01ldGhvZDFGYWlsdXJlQTsKICBjb25zdCBmYWN0b3J5IHt7bmFtZS5wYXNjYWxDYXNlKCl9fVNlcnZpY2VNZXRob2QxRmFpbHVyZS5mYWlsdXJlQigpID0KICAgICAgX01ldGhvZDFGYWlsdXJlQjsKfQoKLy8vIEZhaWx1cmUgdW5pb24gdGhhdCBiZWxvbmdzIHRvIFtJe3tuYW1lLnBhc2NhbENhc2UoKX19U2VydmljZS5tZXRob2QyXS4KQGZyZWV6ZWQKY2xhc3Mge3tuYW1lLnBhc2NhbENhc2UoKX19U2VydmljZU1ldGhvZDJGYWlsdXJlIHdpdGggXyR7e25hbWUucGFzY2FsQ2FzZSgpfX1TZXJ2aWNlTWV0aG9kMkZhaWx1cmUgewogIGNvbnN0IGZhY3Rvcnkge3tuYW1lLnBhc2NhbENhc2UoKX19U2VydmljZU1ldGhvZDJGYWlsdXJlLmZhaWx1cmVBKCkgPQogICAgICBfTWV0aG9kMkZhaWx1cmVBOwogIGNvbnN0IGZhY3Rvcnkge3tuYW1lLnBhc2NhbENhc2UoKX19U2VydmljZU1ldGhvZDJGYWlsdXJlLmZhaWx1cmVCKCkgPQogICAgICBfTWV0aG9kMkZhaWx1cmVCOwp9","type":"text"},{"path":"packages/{{project_name}}/{{project_name}}_domain/lib/{{{output_dir}}}/{{name.snakeCase()}}/i_{{name.snakeCase()}}_service.freezed.dart","data":"","type":"text"}],"hooks":[],"name":"service_interface","description":"A new brick created with the Mason CLI.","version":"0.1.0+1","environment":{"mason":">=0.1.0-dev <0.1.0"},"readme":{"path":"README.md","data":"IyBzZXJ2aWNlX2ludGVyZmFjZQoKQSBuZXcgYnJpY2sgY3JlYXRlZCB3aXRoIHRoZSBNYXNvbiBDTEkuCgpfR2VuZXJhdGVkIGJ5IFttYXNvbl1bMV0g8J+nsV8KCiMjIEdldHRpbmcgU3RhcnRlZCDwn5qACgpUaGlzIGlzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIGEgbmV3IGJyaWNrLgpBIGZldyByZXNvdXJjZXMgdG8gZ2V0IHlvdSBzdGFydGVkIGlmIHRoaXMgaXMgeW91ciBmaXJzdCBicmljayB0ZW1wbGF0ZToKCi0gW09mZmljaWFsIE1hc29uIERvY3VtZW50YXRpb25dWzJdCi0gW0NvZGUgZ2VuZXJhdGlvbiB3aXRoIE1hc29uIEJsb2ddWzNdCi0gW1ZlcnkgR29vZCBMaXZlc3RyZWFtOiBGZWxpeCBBbmdlbG92IERlbW9zIE1hc29uXVs0XQoKWzFdOiBodHRwczovL2dpdGh1Yi5jb20vZmVsYW5nZWwvbWFzb24KWzJdOiBodHRwczovL2dpdGh1Yi5jb20vZmVsYW5nZWwvbWFzb24vdHJlZS9tYXN0ZXIvcGFja2FnZXMvbWFzb25fY2xpI3JlYWRtZQpbM106IGh0dHBzOi8vdmVyeWdvb2QudmVudHVyZXMvYmxvZy9jb2RlLWdlbmVyYXRpb24td2l0aC1tYXNvbgpbNF06IGh0dHBzOi8veW91dHUuYmUvRzRQVGpBNnRwVFUK","type":"text"},"changelog":{"path":"CHANGELOG.md","data":"IyAwLjEuMCsxCgotIFRPRE86IERlc2NyaWJlIGluaXRpYWwgcmVsZWFzZS4K","type":"text"},"license":{"path":"LICENSE","data":"VE9ETzogQWRkIHlvdXIgbGljZW5zZSBoZXJlLgo=","type":"text"},"vars":{"project_name":{"type":"string"},"name":{"type":"string"},"output_dir":{"type":"string"}}});