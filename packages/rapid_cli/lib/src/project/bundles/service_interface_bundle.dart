// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint, implicit_dynamic_list_literal, implicit_dynamic_map_literal, inference_failure_on_collection_literal

import 'package:mason/mason.dart';

final serviceInterfaceBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": "lib/src/{{{output_dir}}}/i_{{name.snakeCase()}}_service.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOmZyZWV6ZWRfYW5ub3RhdGlvbi9mcmVlemVkX2Fubm90YXRpb24uZGFydCc7CgpwYXJ0ICdpX3t7bmFtZS5zbmFrZUNhc2UoKX19X3NlcnZpY2UuZnJlZXplZC5kYXJ0JzsKCmFic3RyYWN0IGNsYXNzIEl7e25hbWUucGFzY2FsQ2FzZSgpfX1TZXJ2aWNlIHsKICBNeU1ldGhvZFJlc3VsdCBteU1ldGhvZCgpOwoKICAvLyBUT0RPOiBhZGQgbW9yZSBzZXJ2aWNlIG1ldGhvZHMKfQoKc2VhbGVkIGNsYXNzIE15TWV0aG9kUmVzdWx0IHsKICBjb25zdCBNeU1ldGhvZFJlc3VsdCgpOwp9CgpAZnJlZXplZApjbGFzcyBNeU1ldGhvZFN1Y2Nlc3MgZXh0ZW5kcyBNeU1ldGhvZFJlc3VsdCB3aXRoIF8kTXlNZXRob2RTdWNjZXNzIHsKICBjb25zdCBmYWN0b3J5IE15TWV0aG9kU3VjY2VzcyhTdHJpbmcgdmFsdWUpID0gX015TWV0aG9kU3VjY2VzczsKICBjb25zdCBNeU1ldGhvZFN1Y2Nlc3MuXygpOwp9CgpAZnJlZXplZApzZWFsZWQgY2xhc3MgTXlNZXRob2RGYWlsdXJlIGV4dGVuZHMgTXlNZXRob2RSZXN1bHQgd2l0aCBfJE15TWV0aG9kRmFpbHVyZSB7CiAgY29uc3QgTXlNZXRob2RGYWlsdXJlLl8oKTsKICBjb25zdCBmYWN0b3J5IE15TWV0aG9kRmFpbHVyZS5mb28oKSA9IE15TWV0aG9kRmFpbHVyZUZvbzsKICAvLyBUT0RPOiBhZGQgbW9yZSBmYWlsdXJlIGNhc2VzIGhlcmUKfQoKLy8gVE9ETzogYWRkIG1vcmUgc2VydmljZSBtZXRob2QgcmVzdWx0cyBoZXJlCg==",
      "type": "text"
    },
    {
      "path":
          "lib/src/{{{output_dir}}}/i_{{name.snakeCase()}}_service.freezed.dart",
      "data":
          "",
      "type": "text"
    }
  ],
  "hooks": [],
  "name": "service_interface",
  "description":
      "A brick generating an service_interface of a domain package of a Rapid project.",
  "version": "0.1.0",
  "environment": {"mason": ">=0.1.0-dev <0.1.0"},
  "readme": {
    "path": "README.md",
    "data": "IyBzZXJ2aWNlX2ludGVyZmFjZQoKVE9ETwo=",
    "type": "text"
  },
  "changelog": {
    "path": "CHANGELOG.md",
    "data": "IyAwLjEuMAoKLSBUT0RPOiBEZXNjcmliZSBpbml0aWFsIHJlbGVhc2UuCg==",
    "type": "text"
  },
  "vars": {
    "project_name": {"type": "string"},
    "name": {"type": "string"},
    "output_dir": {"type": "string"}
  }
});
