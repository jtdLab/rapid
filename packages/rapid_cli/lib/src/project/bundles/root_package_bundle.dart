// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint, implicit_dynamic_list_literal, implicit_dynamic_map_literal, inference_failure_on_collection_literal

import 'package:mason/mason.dart';

final rootPackageBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": ".gitignore",
      "data":
          "IyBNaXNjZWxsYW5lb3VzCiouY2xhc3MKKi5sb2cKKi5weWMKKi5zd3AKLkRTX1N0b3JlCi5hdG9tLwouYnVpbGRsb2cvCi5oaXN0b3J5Ci5zdm4vCm1pZ3JhdGVfd29ya2luZ19kaXIvCgojIEludGVsbGlKIHJlbGF0ZWQKKi5pbWwKKi5pcHIKKi5pd3MKLmlkZWEvCgojIEZsdXR0ZXIvRGFydC9QdWIgcmVsYXRlZAouZGFydF90b29sLwoKIyBSYXBpZAoucmFwaWRfdG9vbC8K",
      "type": "text"
    },
    {
      "path": "analysis_options.yaml",
      "data":
          "",
      "type": "text"
    },
    {
      "path": "melos.yaml",
      "data":
          "bmFtZToge3twcm9qZWN0X25hbWV9fQoKcGFja2FnZXM6CiAgLSBwYWNrYWdlcy8qKgoKY29tbWFuZDoKICBib290c3RyYXA6CiAgICAjIGh0dHBzOi8vZ2l0aHViLmNvbS9kYXJ0LWxhbmcvcHViL2lzc3Vlcy8zNDA0KQogICAgcnVuUHViR2V0SW5QYXJhbGxlbDogZmFsc2UKCiAgY2xlYW46CiAgICBob29rczoKICAgICAgcG9zdDogbWVsb3MgZXhlYyAtYyAzIC0tICJmbHV0dGVyIGNsZWFuIgoKaWRlOgogIGludGVsbGlqOiBmYWxzZQoKc2NyaXB0czoKICBhbmFseXplOgogICAgcnVuOiBmbHV0dGVyIGFuYWx5emUKICAgIGRlc2NyaXB0aW9uOiBBbmFseXplIGFsbCBwYWNrYWdlcy4KCiAgZm9ybWF0OgogICAgcnVuOiBkYXJ0IGZvcm1hdCAuIC0tZml4CiAgICBkZXNjcmlwdGlvbjogRm9ybWF0IGFsbCBwYWNrYWdlcy4KCiAgYnVpbGRfcnVubmVyOgogICAgZXhlYzogZmx1dHRlciBwdWIgcnVuIGJ1aWxkX3J1bm5lciBidWlsZCAtLWRlbGV0ZS1jb25mbGljdGluZy1vdXRwdXRzCiAgICBkZXNjcmlwdGlvbjogUnVuIGBidWlsZF9ydW5uZXJgIGluIGEgcGFja2FnZS4KICAgIHBhY2thZ2VGaWx0ZXJzOgogICAgICBkZXBlbmRzT246CiAgICAgICAgLSBidWlsZF9ydW5uZXIKCiAgYnVpbGRfcnVubmVyOndhdGNoOgogICAgZXhlYzogZmx1dHRlciBwdWIgcnVuIGJ1aWxkX3J1bm5lciB3YXRjaCAtLWRlbGV0ZS1jb25mbGljdGluZy1vdXRwdXRzCiAgICBkZXNjcmlwdGlvbjogUnVuIGBidWlsZF9ydW5uZXJgIGluIGEgcGFja2FnZS4gKFdhdGNoIG1vZGUpCiAgICBwYWNrYWdlRmlsdGVyczoKICAgICAgZGVwZW5kc09uOgogICAgICAgIC0gYnVpbGRfcnVubmVyCgogIGJ1aWxkX3J1bm5lcjpjbGVhbjoKICAgIGV4ZWM6IGZsdXR0ZXIgcHViIHJ1biBidWlsZF9ydW5uZXIgY2xlYW4KICAgIGRlc2NyaXB0aW9uOiBDbGVhbiBgYnVpbGRfcnVubmVyYCBvdXRwdXRzIG9mIGEgcGFja2FnZS4KICAgIHBhY2thZ2VGaWx0ZXJzOgogICAgICBkZXBlbmRzT246CiAgICAgICAgLSBidWlsZF9ydW5uZXIKCiAgZ2VuLWwxMG46CiAgICBleGVjOiBmbHV0dGVyIGdlbi1sMTBuIC0tZm9ybWF0CiAgICBkZXNjcmlwdGlvbjogKFJlKS1nZW5lcmF0ZSBsb2NhbGl6YXRpb25zIGluIGEgcGFja2FnZS4KICAgIHBhY2thZ2VGaWx0ZXJzOgogICAgICBkZXBlbmRzT246CiAgICAgICAgLSBmbHV0dGVyX2xvY2FsaXphdGlvbnMKICAgICAgICAtIGludGwKCiAgcnVuOmRldjoKICAgIGV4ZWM6IGZsdXR0ZXIgcnVuIC10IGxpYi9tYWluX2RldmVsb3BtZW50LmRhcnQKICAgIGRlc2NyaXB0aW9uOiBSdW4gYXBwIGluIGRlYnVnIG1vZGUuIChkZXZlbG9wbWVudCkKICAgIHBhY2thZ2VGaWx0ZXJzOgogICAgICBmaWxlRXhpc3RzOgogICAgICAgIC0gbGliL21haW5fZGV2ZWxvcG1lbnQuZGFydAoKICBydW46dGVzdDoKICAgIGV4ZWM6IGZsdXR0ZXIgcnVuIC10IGxpYi9tYWluX3Rlc3QuZGFydAogICAgZGVzY3JpcHRpb246IFJ1biBhcHAgaW4gZGVidWcgbW9kZS4gKHRlc3QpCiAgICBwYWNrYWdlRmlsdGVyczoKICAgICAgZmlsZUV4aXN0czoKICAgICAgICAtIGxpYi9tYWluX3Rlc3QuZGFydAoKICBydW46cHJvZDoKICAgIGV4ZWM6IGZsdXR0ZXIgcnVuIC10IGxpYi9tYWluX3Byb2R1Y3Rpb24uZGFydAogICAgZGVzY3JpcHRpb246IFJ1biBhcHAgaW4gZGVidWcgbW9kZS4gKHByb2R1Y3Rpb24pCiAgICBwYWNrYWdlRmlsdGVyczoKICAgICAgZmlsZUV4aXN0czoKICAgICAgICAtIGxpYi9tYWluX3Byb2R1Y3Rpb24uZGFydAoKICB0ZXN0OgogICAgZXhlYzogZmx1dHRlciB0ZXN0CiAgICBkZXNjcmlwdGlvbjogUnVuIGBmbHV0dGVyIHRlc3RgIGluIGEgcGFja2FnZS4KICAgIHBhY2thZ2VGaWx0ZXJzOgogICAgICBkaXJFeGlzdHM6CiAgICAgICAgLSB0ZXN0CgogIHRlc3Q6Y292ZXJhZ2U6CiAgICBleGVjOiBmbHV0dGVyIHRlc3QgLS1jb3ZlcmFnZQogICAgZGVzY3JpcHRpb246IFJ1biBgZmx1dHRlciB0ZXN0IC0tY292ZXJhZ2VgIGluIGEgcGFja2FnZS4KICAgIHBhY2thZ2VGaWx0ZXJzOgogICAgICBkaXJFeGlzdHM6CiAgICAgICAgLSB0ZXN0CgogIHRlc3Q6dXBkYXRlOmdvbGRlbnM6CiAgICBleGVjOiBmbHV0dGVyIHRlc3QgLS11cGRhdGUtZ29sZGVucwogICAgZGVzY3JpcHRpb246IFVwZGF0ZSBnb2xkZW5zIG9mIGEgcGFja2FnZS4KICAgIHBhY2thZ2VGaWx0ZXJzOgogICAgICBkaXJFeGlzdHM6CiAgICAgICAgLSB0ZXN0CiAgICAgIGRlcGVuZHNPbjoKICAgICAgICAtIGFsY2hlbWlzdAoKICB0ZXN0OmUyZTpkZXY6CiAgICBleGVjOiBmbHV0dGVyIHRlc3QgaW50ZWdyYXRpb25fdGVzdC9kZXZlbG9wbWVudF90ZXN0LmRhcnQKICAgIGRlc2NyaXB0aW9uOiB8CiAgICAgIFJ1biBlMmUgdGVzdHMgaW4gbm9uIHdlYiByb290IHBhY2thZ2UuIChkZXZlbG9wbWVudCkKICAgIHBhY2thZ2VGaWx0ZXJzOgogICAgICBpZ25vcmU6ICIqd2ViKiIKICAgICAgZmlsZUV4aXN0czoKICAgICAgICAtIGludGVncmF0aW9uX3Rlc3QvZGV2ZWxvcG1lbnRfdGVzdC5kYXJ0CiAgICAgIGRlcGVuZHNPbjoKICAgICAgICAtIGludGVncmF0aW9uX3Rlc3QKCiAgdGVzdDplMmU6ZGV2OndlYjoKICAgIGV4ZWM6IHwKICAgICAgZmx1dHRlciBkcml2ZSBcCiAgICAgICAgLS1kcml2ZXI9dGVzdF9kcml2ZXIvaW50ZWdyYXRpb25fdGVzdC5kYXJ0IFwKICAgICAgICAtLXRhcmdldD1pbnRlZ3JhdGlvbl90ZXN0L2RldmVsb3BtZW50X3Rlc3QuZGFydCBcCiAgICAgICAgLWQgY2hyb21lCiAgICBkZXNjcmlwdGlvbjogfAogICAgICBSdW4gZTJlIHRlc3RzIGluIHdlYiByb290IHBhY2thZ2UuIChkZXZlbG9wbWVudCkKICAgICAgIC0gUmVxdWlyZXMgYGNocm9tZWRyaXZlcmAgCiAgICAgICAgKGNhbiBiZSBpbnN0YWxsZWQgdmlhIGh0dHBzOi8vY2hyb21lZHJpdmVyLmNocm9taXVtLm9yZy9kb3dubG9hZHMpLgogICAgICAgIChjYW4gYmUgaW5zdGFsbGVkIHZpYSBgYnJldyBpbnN0YWxsIC0tY2FzayBjaHJvbWVkcml2ZXJgIG9uIG1hY09TKS4KICAgICAgIC0gUmVxdWlyZXMgcnVubmluZyBgY2hyb21lZHJpdmVyIC0tcG9ydD00NDQ0YAogICAgcGFja2FnZUZpbHRlcnM6CiAgICAgIHNjb3BlOiAiKndlYioiCiAgICAgIGZpbGVFeGlzdHM6CiAgICAgICAgLSBpbnRlZ3JhdGlvbl90ZXN0L2RldmVsb3BtZW50X3Rlc3QuZGFydAogICAgICBkZXBlbmRzT246CiAgICAgICAgLSBpbnRlZ3JhdGlvbl90ZXN0CgogIHRlc3Q6ZTJlOnRlc3Q6CiAgICBleGVjOiBmbHV0dGVyIHRlc3QgaW50ZWdyYXRpb25fdGVzdC90ZXN0X3Rlc3QuZGFydAogICAgZGVzY3JpcHRpb246IHwKICAgICAgUnVuIGUyZSB0ZXN0cyBpbiBub24gd2ViIHJvb3QgcGFja2FnZS4gKHRlc3QpCiAgICBwYWNrYWdlRmlsdGVyczoKICAgICAgaWdub3JlOiAiKndlYioiCiAgICAgIGZpbGVFeGlzdHM6CiAgICAgICAgLSBpbnRlZ3JhdGlvbl90ZXN0L3Rlc3RfdGVzdC5kYXJ0CiAgICAgIGRlcGVuZHNPbjoKICAgICAgICAtIGludGVncmF0aW9uX3Rlc3QKCiAgdGVzdDplMmU6dGVzdDp3ZWI6CiAgICBleGVjOiB8CiAgICAgIGZsdXR0ZXIgZHJpdmUgXAogICAgICAgIC0tZHJpdmVyPXRlc3RfZHJpdmVyL2ludGVncmF0aW9uX3Rlc3QuZGFydCBcCiAgICAgICAgLS10YXJnZXQ9aW50ZWdyYXRpb25fdGVzdC90ZXN0X3Rlc3QuZGFydCBcCiAgICAgICAgLWQgY2hyb21lCiAgICBkZXNjcmlwdGlvbjogfAogICAgICBSdW4gZTJlIHRlc3RzIGluIHdlYiByb290IHBhY2thZ2UuICh0ZXN0KQogICAgICAgLSBSZXF1aXJlcyBgY2hyb21lZHJpdmVyYCAKICAgICAgICAoY2FuIGJlIGluc3RhbGxlZCB2aWEgaHR0cHM6Ly9jaHJvbWVkcml2ZXIuY2hyb21pdW0ub3JnL2Rvd25sb2FkcykuCiAgICAgICAgKGNhbiBiZSBpbnN0YWxsZWQgdmlhIGBicmV3IGluc3RhbGwgLS1jYXNrIGNocm9tZWRyaXZlcmAgb24gbWFjT1MpLgogICAgICAgLSBSZXF1aXJlcyBydW5uaW5nIGBjaHJvbWVkcml2ZXIgLS1wb3J0PTQ0NDRgCiAgICBwYWNrYWdlRmlsdGVyczoKICAgICAgc2NvcGU6ICIqd2ViKiIKICAgICAgZmlsZUV4aXN0czoKICAgICAgICAtIGludGVncmF0aW9uX3Rlc3QvdGVzdF90ZXN0LmRhcnQKICAgICAgZGVwZW5kc09uOgogICAgICAgIC0gaW50ZWdyYXRpb25fdGVzdAoKICB0ZXN0OmUyZTpwcm9kOgogICAgZXhlYzogZmx1dHRlciB0ZXN0IGludGVncmF0aW9uX3Rlc3QvcHJvZHVjdGlvbl90ZXN0LmRhcnQKICAgIGRlc2NyaXB0aW9uOiB8CiAgICAgIFJ1biBlMmUgdGVzdHMgaW4gbm9uIHdlYiByb290IHBhY2thZ2UuIChwcm9kdWN0aW9uKQogICAgcGFja2FnZUZpbHRlcnM6CiAgICAgIGlnbm9yZTogIip3ZWIqIgogICAgICBmaWxlRXhpc3RzOgogICAgICAgIC0gaW50ZWdyYXRpb25fdGVzdC9wcm9kdWN0aW9uX3Rlc3QuZGFydAogICAgICBkZXBlbmRzT246CiAgICAgICAgLSBpbnRlZ3JhdGlvbl90ZXN0CgogIHRlc3Q6ZTJlOnByb2Q6d2ViOgogICAgZXhlYzogfAogICAgICBmbHV0dGVyIGRyaXZlIFwKICAgICAgICAtLWRyaXZlcj10ZXN0X2RyaXZlci9pbnRlZ3JhdGlvbl90ZXN0LmRhcnQgXAogICAgICAgIC0tdGFyZ2V0PWludGVncmF0aW9uX3Rlc3QvcHJvZHVjdGlvbl90ZXN0LmRhcnQgXAogICAgICAgIC1kIGNocm9tZQogICAgZGVzY3JpcHRpb246IHwKICAgICAgUnVuIGUyZSB0ZXN0cyBpbiB3ZWIgcm9vdCBwYWNrYWdlLiAocHJvZHVjdGlvbikKICAgICAgIC0gUmVxdWlyZXMgYGNocm9tZWRyaXZlcmAgCiAgICAgICAgKGNhbiBiZSBpbnN0YWxsZWQgdmlhIGh0dHBzOi8vY2hyb21lZHJpdmVyLmNocm9taXVtLm9yZy9kb3dubG9hZHMpLgogICAgICAgIChjYW4gYmUgaW5zdGFsbGVkIHZpYSBgYnJldyBpbnN0YWxsIC0tY2FzayBjaHJvbWVkcml2ZXJgIG9uIG1hY09TKS4KICAgICAgIC0gUmVxdWlyZXMgcnVubmluZyBgY2hyb21lZHJpdmVyIC0tcG9ydD00NDQ0YAogICAgcGFja2FnZUZpbHRlcnM6CiAgICAgIHNjb3BlOiAiKndlYioiCiAgICAgIGZpbGVFeGlzdHM6CiAgICAgICAgLSBpbnRlZ3JhdGlvbl90ZXN0L3Byb2R1Y3Rpb25fdGVzdC5kYXJ0CiAgICAgIGRlcGVuZHNPbjoKICAgICAgICAtIGludGVncmF0aW9uX3Rlc3QKCiAgY292ZXJhZ2U6CiAgICBleGVjOiB0ZXN0X2Nvdl9jb25zb2xlIC10CiAgICBkZXNjcmlwdGlvbjogfAogICAgICBDYWxjdWxhdGUgY292ZXJhZ2UgZm9yIGEgcGFja2FnZS4KICAgICAgIC0gUmVxdWlyZXMgYHRlc3RfY292X2NvbnNvbGVgIChjYW4gYmUgaW5zdGFsbGVkIHZpYSBgZGFydCBwdWIgZ2xvYmFsIGFjdGl2YXRlIHRlc3RfY292X2NvbnNvbGVgKS4KICAgIHBhY2thZ2VGaWx0ZXJzOgogICAgICBmaWxlRXhpc3RzOgogICAgICAgIC0gY292ZXJhZ2UvbGNvdi5pbmZvCgogIGNvdmVyYWdlOmh0bWw6CiAgICBleGVjOiBnZW5odG1sIGNvdmVyYWdlL2xjb3YuaW5mbyAtbyBjb3ZlcmFnZS9odG1sCiAgICBkZXNjcmlwdGlvbjogfAogICAgICBHZW5lcmF0ZSBhIGh0bWwtY292ZXJhZ2UgcmVwb3J0IGZvciBhIHBhY2thZ2UuCiAgICAgICAtIFJlcXVpcmVzIGBsY292YCAoY2FuIGJlIGluc3RhbGxlZCB2aWEgYGJyZXcgaW5zdGFsbCBsY292YCBvbiBtYWNPUykuCiAgICBwYWNrYWdlRmlsdGVyczoKICAgICAgZmlsZUV4aXN0czoKICAgICAgICAtIGNvdmVyYWdlL2xjb3YuaW5mbwo=",
      "type": "text"
    },
    {
      "path": "pubspec.yaml",
      "data":
          "bmFtZToge3twcm9qZWN0X25hbWV9fQoKZW52aXJvbm1lbnQ6CiAgc2RrOiAiPj0zLjEuMCA8NC4wLjAiCgpkZXZfZGVwZW5kZW5jaWVzOgogIG1lbG9zOiBeMy4xLjEKICByYXBpZF9jbGk6CiAgICBnaXQ6CiAgICAgIHVybDogaHR0cHM6Ly9naXRodWIuY29tL2p0ZExhYi9yYXBpZC5naXQKICAgICAgcGF0aDogcGFja2FnZXMvcmFwaWRfY2xpCgpyYXBpZDoKICBuYW1lOiB7e3Byb2plY3RfbmFtZX19Cg==",
      "type": "text"
    },
    {"path": "README.md", "data": "", "type": "text"}
  ],
  "hooks": [],
  "name": "root_package",
  "description": "A brick generating the root package of a Rapid project.",
  "version": "0.1.0",
  "environment": {"mason": ">=0.1.0-dev <0.1.0"},
  "readme": {
    "path": "README.md",
    "data": "IyByb290X3BhY2thZ2UKClRPRE8K",
    "type": "text"
  },
  "changelog": {
    "path": "CHANGELOG.md",
    "data": "IyAwLjEuMAoKLSBUT0RPOiBEZXNjcmliZSBpbml0aWFsIHJlbGVhc2UuCg==",
    "type": "text"
  },
  "vars": {
    "project_name": {"type": "string"}
  }
});
