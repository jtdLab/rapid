// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint, implicit_dynamic_list_literal, implicit_dynamic_map_literal, inference_failure_on_collection_literal

import 'package:mason/mason.dart';

final widgetBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": "lib/src/{{name.snakeCase()}}.dart",
      "data":
          "e3teYW5kcm9pZH19e3teaW9zfX17e15saW51eH19e3tebWFjb3N9fXt7XndlYn19e3ted2luZG93c319e3tebW9iaWxlfX1pbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci93aWRnZXRzLmRhcnQnO3t7L21vYmlsZX19e3svd2luZG93c319e3svd2VifX17ey9tYWNvc319e3svbGludXh9fXt7L2lvc319e3svYW5kcm9pZH19Cnt7I2FuZHJvaWR9fWltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnO3t7L2FuZHJvaWR9fQp7eyNpb3N9fWltcG9ydCAncGFja2FnZTpmbHV0dGVyL2N1cGVydGluby5kYXJ0Jzt7ey9pb3N9fQp7eyNsaW51eH19aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7e3svbGludXh9fQp7eyNtYWNvc319aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvY3VwZXJ0aW5vLmRhcnQnO3t7L21hY29zfX0Ke3sjd2VifX1pbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0Jzt7ey93ZWJ9fQp7eyN3aW5kb3dzfX1pbXBvcnQgJ3BhY2thZ2U6Zmx1ZW50X3VpL2ZsdWVudF91aS5kYXJ0Jzt7ey93aW5kb3dzfX0Ke3sjbW9iaWxlfX1pbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0Jzt7ey9tb2JpbGV9fQoKY2xhc3Mge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX0gZXh0ZW5kcyBTdGF0ZWxlc3NXaWRnZXQgewogIGNvbnN0IHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19KHtzdXBlci5rZXl9KTsKCiAgQG92ZXJyaWRlCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0KSB7CiAgICAvLyBUT0RPOiBpbXBsZW1lbnQKICAgIHJldHVybiBDb250YWluZXIoKTsKICB9Cn0=",
      "type": "text"
    },
    {
      "path": "test/src/{{name.snakeCase()}}_test.dart",
      "data":
          "",
      "type": "text"
    }
  ],
  "hooks": [
    {
      "path": "pre_gen.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOm1hc29uL21hc29uLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6aG9va3MvaG9va3MuZGFydCc7Cgp2b2lkIHJ1bihIb29rQ29udGV4dCBjb250ZXh0KSB7CiAgaWYgKGNvbnRleHQudmFyc1sncGxhdGZvcm0nXSAhPSBudWxsKSB7CiAgICBhZGRQbGF0Zm9ybUZsYWdzKGNvbnRleHQpOwogIH0KfQo=",
      "type": "text"
    },
    {
      "path": "pubspec.yaml",
      "data":
          "bmFtZTogd2lkZ2V0X2hvb2tzCgplbnZpcm9ubWVudDoKICBzZGs6ICI+PTMuMC4wIDw0LjAuMCIKCmRlcGVuZGVuY2llczoKICBtYXNvbjogYW55CiAgIyBUT0RPOiBodHRwczovL2dpdGh1Yi5jb20vZmVsYW5nZWwvbWFzb24vaXNzdWVzLzk5NgogIGhvb2tzOgogICAgZ2l0OgogICAgICB1cmw6IGh0dHBzOi8vZ2l0aHViLmNvbS9qdGRMYWIvcmFwaWQuZ2l0CiAgICAgIHBhdGg6IHBhY2thZ2VzL3JhcGlkX2NsaS90ZW1wbGF0ZXMvaG9va3MKICAgICAgcmVmOiBkZXYK",
      "type": "text"
    }
  ],
  "name": "widget",
  "description":
      "A brick generating a widget of a ui package of a Rapid project.",
  "version": "0.1.0",
  "environment": {"mason": ">=0.1.0-dev <0.1.0"},
  "readme": {
    "path": "README.md",
    "data": "IyB3aWRnZXQKClRPRE8=",
    "type": "text"
  },
  "changelog": {
    "path": "CHANGELOG.md",
    "data": "IyAwLjEuMAoKLSBUT0RPOiBEZXNjcmliZSBpbml0aWFsIHJlbGVhc2UuCg==",
    "type": "text"
  },
  "vars": {
    "project_name": {"type": "string"},
    "name": {"type": "string"},
    "platform": {"type": "string"}
  }
});
