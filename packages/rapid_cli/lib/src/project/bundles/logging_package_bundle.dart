// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint, implicit_dynamic_list_literal, implicit_dynamic_map_literal, inference_failure_on_collection_literal

import 'package:mason/mason.dart';

final loggingPackageBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": ".gitignore",
      "data":
          "IyBNaXNjZWxsYW5lb3VzCiouY2xhc3MKKi5sb2cKKi5weWMKKi5zd3AKLkRTX1N0b3JlCi5hdG9tLwouYnVpbGRsb2cvCi5oaXN0b3J5Ci5zdm4vCm1pZ3JhdGVfd29ya2luZ19kaXIvCgojIEludGVsbGlKIHJlbGF0ZWQKKi5pbWwKKi5pcHIKKi5pd3MKLmlkZWEvCgojIFRoZSAudnNjb2RlIGZvbGRlciBjb250YWlucyBsYXVuY2ggY29uZmlndXJhdGlvbiBhbmQgdGFza3MgeW91IGNvbmZpZ3VyZSBpbgojIFZTIENvZGUgd2hpY2ggeW91IG1heSB3aXNoIHRvIGJlIGluY2x1ZGVkIGluIHZlcnNpb24gY29udHJvbCwgc28gdGhpcyBsaW5lCiMgaXMgY29tbWVudGVkIG91dCBieSBkZWZhdWx0LgojLnZzY29kZS8KCiMgRmlsZXMgYW5kIGRpcmVjdG9yaWVzIGNyZWF0ZWQgYnkgcHViLgouZGFydF90b29sLwoucGFja2FnZXMKCiMgQ29udmVudGlvbmFsIGRpcmVjdG9yeSBmb3IgYnVpbGQgb3V0cHV0cy4KYnVpbGQvCgojIENvbnZlbnRpb25hbCBkaXJlY3RvcnkgZm9yIGNvdmVyYWdlIG91dHB1dHMuCi9jb3ZlcmFnZQo=",
      "type": "text"
    },
    {
      "path": "analysis_options.yaml",
      "data":
          "IyBUaGlzIGZpbGUgY29uZmlndXJlcyB0aGUgc3RhdGljIGFuYWx5c2lzIHJlc3VsdHMgZm9yIHlvdXIgcHJvamVjdCAoZXJyb3JzLAojIHdhcm5pbmdzLCBhbmQgbGludHMpLgojCiMgVGhpcyBlbmFibGVzIHRoZSAncmVjb21tZW5kZWQnIHNldCBvZiBsaW50cyBmcm9tIGBwYWNrYWdlOmxpbnRzYC4KIyBUaGlzIHNldCBoZWxwcyBpZGVudGlmeSBtYW55IGlzc3VlcyB0aGF0IG1heSBsZWFkIHRvIHByb2JsZW1zIHdoZW4gcnVubmluZwojIG9yIGNvbnN1bWluZyBEYXJ0IGNvZGUsIGFuZCBlbmZvcmNlcyB3cml0aW5nIERhcnQgdXNpbmcgYSBzaW5nbGUsIGlkaW9tYXRpYwojIHN0eWxlIGFuZCBmb3JtYXQuCiMKIyBJZiB5b3Ugd2FudCBhIHNtYWxsZXIgc2V0IG9mIGxpbnRzIHlvdSBjYW4gY2hhbmdlIHRoaXMgdG8gc3BlY2lmeQojICdwYWNrYWdlOmxpbnRzL2NvcmUueWFtbCcuIFRoZXNlIGFyZSBqdXN0IHRoZSBtb3N0IGNyaXRpY2FsIGxpbnRzCiMgKHRoZSByZWNvbW1lbmRlZCBzZXQgaW5jbHVkZXMgdGhlIGNvcmUgbGludHMpLgojIFRoZSBjb3JlIGxpbnRzIGFyZSBhbHNvIHdoYXQgaXMgdXNlZCBieSBwdWIuZGV2IGZvciBzY29yaW5nIHBhY2thZ2VzLgoKaW5jbHVkZTogcGFja2FnZTpsaW50cy9yZWNvbW1lbmRlZC55YW1sCgojIFVuY29tbWVudCB0aGUgZm9sbG93aW5nIHNlY3Rpb24gdG8gc3BlY2lmeSBhZGRpdGlvbmFsIHJ1bGVzLgoKIyBsaW50ZXI6CiMgICBydWxlczoKIyAgICAgLSBjYW1lbF9jYXNlX3R5cGVzCgojIGFuYWx5emVyOgojICAgZXhjbHVkZToKIyAgICAgLSBwYXRoL3RvL2V4Y2x1ZGVkL2ZpbGVzLyoqCgojIEZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjb3JlIGFuZCByZWNvbW1lbmRlZCBzZXQgb2YgbGludHMsIHNlZQojIGh0dHBzOi8vZGFydC5kZXYvZ28vY29yZS1saW50cwoKIyBGb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBhYm91dCBjb25maWd1cmluZyB0aGlzIGZpbGUsIHNlZQojIGh0dHBzOi8vZGFydC5kZXYvZ3VpZGVzL2xhbmd1YWdlL2FuYWx5c2lzLW9wdGlvbnMK",
      "type": "text"
    },
    {
      "path": "CHANGELOG.md",
      "data": "IyMgMS4wLjAKCi0gSW5pdGlhbCB2ZXJzaW9uLgo=",
      "type": "text"
    },
    {
      "path": "lib/src/injection.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOmluamVjdGFibGUvaW5qZWN0YWJsZS5kYXJ0JzsKCi8vLyBTZXR1cCBpbmplY3RhYmxlIHBhY2thZ2Ugd2hpY2ggZ2VuZXJhdGVzIGRlcGVuZGVuY3kgaW5qZWN0aW9uIGNvZGUuCi8vLwovLy8gRm9yIG1vcmUgaW5mbyBzZWU6IGh0dHBzOi8vcHViLmRldi9wYWNrYWdlcy9pbmplY3RhYmxlI2luY2x1ZGluZy1taWNyb3BhY2thZ2VzLWFuZC1leHRlcm5hbC1tb2R1bGVzCkBJbmplY3RhYmxlSW5pdC5taWNyb1BhY2thZ2UoKQppbml0TWljcm9QYWNrYWdlKCkge30K",
      "type": "text"
    },
    {
      "path": "lib/src/injection.module.dart",
      "data":
          "Ly9AR2VuZXJhdGVkTWljcm9Nb2R1bGU7e3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1Mb2dnaW5nUGFja2FnZU1vZHVsZTtwYWNrYWdlOnt7cHJvamVjdF9uYW1lfX1fbG9nZ2luZy9zcmMvaW5qZWN0aW9uLm1vZHVsZS5kYXJ0Ci8vIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWSBCWSBIQU5ECi8vIGlnbm9yZV9mb3JfZmlsZTogdW5uZWNlc3NhcnlfbGFtYmRhcwovLyBpZ25vcmVfZm9yX2ZpbGU6IGxpbmVzX2xvbmdlcl90aGFuXzgwX2NoYXJzCi8vIGNvdmVyYWdlOmlnbm9yZS1maWxlCgovLyBpZ25vcmVfZm9yX2ZpbGU6IG5vX2xlYWRpbmdfdW5kZXJzY29yZXNfZm9yX2xpYnJhcnlfcHJlZml4ZXMKaW1wb3J0ICdkYXJ0OmFzeW5jJyBhcyBfaTI7CgppbXBvcnQgJ3BhY2thZ2U6aW5qZWN0YWJsZS9pbmplY3RhYmxlLmRhcnQnIGFzIF9pMTsKaW1wb3J0ICdwYWNrYWdlOnt7cHJvamVjdF9uYW1lfX1fbG9nZ2luZy9zcmMvbG9nZ2VyLmRhcnQnIGFzIF9pMzsKCmNvbnN0IFN0cmluZyBfZGV2ID0gJ2Rldic7CmNvbnN0IFN0cmluZyBfdGVzdCA9ICd0ZXN0JzsKY29uc3QgU3RyaW5nIF9wcm9kID0gJ3Byb2QnOwoKY2xhc3Mge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1Mb2dnaW5nUGFja2FnZU1vZHVsZSBleHRlbmRzIF9pMS5NaWNyb1BhY2thZ2VNb2R1bGUgewogIC8vIGluaXRpYWxpemVzIHRoZSByZWdpc3RyYXRpb24gb2YgbWFpbi1zY29wZSBkZXBlbmRlbmNpZXMgaW5zaWRlIG9mIEdldEl0CiAgQG92ZXJyaWRlCiAgX2kyLkZ1dHVyZU9yPHZvaWQ+IGluaXQoX2kxLkdldEl0SGVscGVyIGdoKSB7CiAgICBnaC5sYXp5U2luZ2xldG9uPF9pMy57e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUxvZ2dlcj4oCiAgICAgICgpID0+IF9pMy57e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUxvZ2dlckRldmVsb3BtZW50KCksCiAgICAgIHJlZ2lzdGVyRm9yOiB7X2Rldn0sCiAgICApOwogICAgZ2gubGF6eVNpbmdsZXRvbjxfaTMue3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1Mb2dnZXI+KAogICAgICAoKSA9PiBfaTMue3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1Mb2dnZXJUZXN0KCksCiAgICAgIHJlZ2lzdGVyRm9yOiB7X3Rlc3R9LAogICAgKTsKICAgIGdoLmxhenlTaW5nbGV0b248X2kzLnt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TG9nZ2VyPigKICAgICAgKCkgPT4gX2kzLnt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TG9nZ2VyUHJvZHVjdGlvbigpLAogICAgICByZWdpc3RlckZvcjoge19wcm9kfSwKICAgICk7CiAgfQp9Cg==",
      "type": "text"
    },
    {
      "path": "lib/src/logger.dart",
      "data":
          "aW1wb3J0ICdkYXJ0OmRldmVsb3Blcic7CgppbXBvcnQgJ3BhY2thZ2U6aW5qZWN0YWJsZS9pbmplY3RhYmxlLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6bWV0YS9tZXRhLmRhcnQnOwoKLy8vIFRoZSBsb2cgbGV2ZWwgb2YgYW4gW3t7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TG9nZ2VyXS4KZW51bSBMZXZlbCB7CiAgdmVyYm9zZSgwKSwKICBkZWJ1Zyg1MDApLAogIGluZm8oODAwKSwKICB3YXJuaW5nKDkwMCksCiAgZXJyb3IoMTAwMCksCiAgd3RmKDEyMDApLAogIG5vdGhpbmcoMjAwMCk7CgogIGZpbmFsIGludCB2YWx1ZTsKICBjb25zdCBMZXZlbCh0aGlzLnZhbHVlKTsKCiAgYm9vbCBvcGVyYXRvciA+PShMZXZlbCBsZXZlbCkgPT4gdmFsdWUgPj0gbGV2ZWwudmFsdWU7Cn0KCi8vLyBTaWduYXR1cmUgb2YgW2xvZ10uCnR5cGVkZWYgTG9nQ29tbWFuZCA9IHZvaWQgRnVuY3Rpb24oCiAgU3RyaW5nIG1lc3NhZ2UsIHsKICBpbnQgbGV2ZWwsCiAgT2JqZWN0PyBlcnJvciwKICBTdGFja1RyYWNlPyBzdGFja1RyYWNlLAp9KTsKCi8vLyBUaGUgbG9nZ2VyIG9mIHRoZSBhcHBsaWNhdGlvbi4KYWJzdHJhY3QgY2xhc3Mge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1Mb2dnZXIgewogIGZpbmFsIExldmVsIGxldmVsOwoKICBAdmlzaWJsZUZvclRlc3RpbmcKICBMb2dDb21tYW5kPyBsb2dDb21tYW5kT3ZlcnJpZGVzOwoKICB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUxvZ2dlcih0aGlzLmxldmVsKTsKCiAgTG9nQ29tbWFuZCBnZXQgX2xvZ0NvbW1hbmQgPT4gbG9nQ29tbWFuZE92ZXJyaWRlcyA/PyBsb2c7CgogIC8vLyBMb2cgYSBtZXNzYWdlIGF0IGxldmVsIFtMZXZlbC52ZXJib3NlXS4KICB2b2lkIHZlcmJvc2UoZHluYW1pYyBtZXNzYWdlLCBbZHluYW1pYyBlcnJvciwgU3RhY2tUcmFjZT8gc3RhY2tUcmFjZV0pIHsKICAgIGlmIChMZXZlbC52ZXJib3NlID49IGxldmVsKSB7CiAgICAgIF9sb2dDb21tYW5kKAogICAgICAgICdbdmVyYm9zZV0gJG1lc3NhZ2UnLAogICAgICAgIGxldmVsOiBMZXZlbC52ZXJib3NlLnZhbHVlLAogICAgICAgIGVycm9yOiBlcnJvciwKICAgICAgICBzdGFja1RyYWNlOiBzdGFja1RyYWNlLAogICAgICApOwogICAgfQogIH0KCiAgLy8vIExvZyBhIG1lc3NhZ2UgYXQgbGV2ZWwgW0xldmVsLmRlYnVnXS4KICB2b2lkIGRlYnVnKGR5bmFtaWMgbWVzc2FnZSwgW2R5bmFtaWMgZXJyb3IsIFN0YWNrVHJhY2U/IHN0YWNrVHJhY2VdKSB7CiAgICBpZiAoTGV2ZWwuZGVidWcgPj0gbGV2ZWwpIHsKICAgICAgX2xvZ0NvbW1hbmQoCiAgICAgICAgJ1tkZWJ1Z10gJG1lc3NhZ2UnLAogICAgICAgIGxldmVsOiBMZXZlbC5kZWJ1Zy52YWx1ZSwKICAgICAgICBlcnJvcjogZXJyb3IsCiAgICAgICAgc3RhY2tUcmFjZTogc3RhY2tUcmFjZSwKICAgICAgKTsKICAgIH0KICB9CgogIC8vLyBMb2cgYSBtZXNzYWdlIGF0IGxldmVsIFtMZXZlbC5pbmZvXS4KICB2b2lkIGluZm8oZHluYW1pYyBtZXNzYWdlLCBbZHluYW1pYyBlcnJvciwgU3RhY2tUcmFjZT8gc3RhY2tUcmFjZV0pIHsKICAgIGlmIChMZXZlbC5pbmZvID49IGxldmVsKSB7CiAgICAgIF9sb2dDb21tYW5kKAogICAgICAgICdbaW5mb10gJG1lc3NhZ2UnLAogICAgICAgIGxldmVsOiBMZXZlbC5pbmZvLnZhbHVlLAogICAgICAgIGVycm9yOiBlcnJvciwKICAgICAgICBzdGFja1RyYWNlOiBzdGFja1RyYWNlLAogICAgICApOwogICAgfQogIH0KCiAgLy8vIExvZyBhIG1lc3NhZ2UgYXQgbGV2ZWwgW0xldmVsLndhcm5pbmddLgogIHZvaWQgd2FybmluZyhkeW5hbWljIG1lc3NhZ2UsIFtkeW5hbWljIGVycm9yLCBTdGFja1RyYWNlPyBzdGFja1RyYWNlXSkgewogICAgaWYgKExldmVsLndhcm5pbmcgPj0gbGV2ZWwpIHsKICAgICAgX2xvZ0NvbW1hbmQoCiAgICAgICAgJ1t3YXJuaW5nXSAkbWVzc2FnZScsCiAgICAgICAgbGV2ZWw6IExldmVsLndhcm5pbmcudmFsdWUsCiAgICAgICAgZXJyb3I6IGVycm9yLAogICAgICAgIHN0YWNrVHJhY2U6IHN0YWNrVHJhY2UsCiAgICAgICk7CiAgICB9CiAgfQoKICAvLy8gTG9nIGEgbWVzc2FnZSBhdCBsZXZlbCBbTGV2ZWwuZXJyb3JdLgogIHZvaWQgZXJyb3IoZHluYW1pYyBtZXNzYWdlLCBbZHluYW1pYyBlcnJvciwgU3RhY2tUcmFjZT8gc3RhY2tUcmFjZV0pIHsKICAgIGlmIChMZXZlbC5lcnJvciA+PSBsZXZlbCkgewogICAgICBfbG9nQ29tbWFuZCgKICAgICAgICAnW2Vycm9yXSAkbWVzc2FnZScsCiAgICAgICAgbGV2ZWw6IExldmVsLmVycm9yLnZhbHVlLAogICAgICAgIGVycm9yOiBlcnJvciwKICAgICAgICBzdGFja1RyYWNlOiBzdGFja1RyYWNlLAogICAgICApOwogICAgfQogIH0KCiAgLy8vIExvZyBhIG1lc3NhZ2UgYXQgbGV2ZWwgW0xldmVsLnd0Zl0uCiAgdm9pZCB3dGYoZHluYW1pYyBtZXNzYWdlLCBbZHluYW1pYyBlcnJvciwgU3RhY2tUcmFjZT8gc3RhY2tUcmFjZV0pIHsKICAgIGlmIChMZXZlbC53dGYgPj0gbGV2ZWwpIHsKICAgICAgX2xvZ0NvbW1hbmQoCiAgICAgICAgJ1t3dGZdICRtZXNzYWdlJywKICAgICAgICBsZXZlbDogTGV2ZWwud3RmLnZhbHVlLAogICAgICAgIGVycm9yOiBlcnJvciwKICAgICAgICBzdGFja1RyYWNlOiBzdGFja1RyYWNlLAogICAgICApOwogICAgfQogIH0KfQoKLy8vIEluIGRldmVsb3BtZW50IG1vZGUgd2UgbG9nIGRlYnVnIGxldmVsIG1lc3NhZ2VzIHRvCi8vLyBwcm92aWRlIHRoZSBkZXZlbG9wZXIgYSBnb29kIG92ZXJ2aWV3IG9mIHRoZSBhcHBsaWNhdGlvbi4KQGRldgpATGF6eVNpbmdsZXRvbihhczoge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1Mb2dnZXIpCmNsYXNzIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TG9nZ2VyRGV2ZWxvcG1lbnQgZXh0ZW5kcyB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUxvZ2dlciB7CiAge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1Mb2dnZXJEZXZlbG9wbWVudCgpIDogc3VwZXIoTGV2ZWwuZGVidWcpOwp9CgovLy8gSW4gdGVzdCBtb2RlIHdlIGxvZyBldmVyeXRoaW5nIHRvIGdldCBhIGxvdyBsZXZlbCBvdmVydmlldwovLy8gb2YgdGhlIGFwcGxpY2F0aW9uIGluIGEgcHJvZHVjdGlvbi1saWtlIGVudmlyb25tZW50LgpAdGVzdApATGF6eVNpbmdsZXRvbihhczoge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1Mb2dnZXIpCmNsYXNzIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TG9nZ2VyVGVzdCBleHRlbmRzIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TG9nZ2VyIHsKICB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUxvZ2dlclRlc3QoKSA6IHN1cGVyKExldmVsLnZlcmJvc2UpOwp9CgovLy8gSW4gcHJvZHVjdGlvbiBtb2RlIHdlIGxvZyBub3RoaW5nIGZvciBzZWN1cml0eSByZWFzb25zLgpAcHJvZApATGF6eVNpbmdsZXRvbihhczoge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1Mb2dnZXIpCmNsYXNzIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TG9nZ2VyUHJvZHVjdGlvbiBleHRlbmRzIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TG9nZ2VyIHsKICB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUxvZ2dlclByb2R1Y3Rpb24oKSA6IHN1cGVyKExldmVsLmRlYnVnKTsKfQo=",
      "type": "text"
    },
    {
      "path": "lib/{{project_name}}_logging.dart",
      "data":
          "Ly8vIExvZ2dpbmcgZm9yIHt7cHJvamVjdF9uYW1lLnRpdGxlQ2FzZSgpfX0uCi8vLwovLy8gVG8gdXNlLCBpbXBvcnQgYHBhY2thZ2U6e3twcm9qZWN0X25hbWV9fV9sb2dnaW5nL3t7cHJvamVjdF9uYW1lfX1fbG9nZ2luZy5kYXJ0YC4KbGlicmFyeSB7e3Byb2plY3RfbmFtZX19X2xvZ2dpbmc7CgpleHBvcnQgJ3NyYy9pbmplY3Rpb24ubW9kdWxlLmRhcnQnOwpleHBvcnQgJ3NyYy9sb2dnZXIuZGFydCc7Cg==",
      "type": "text"
    },
    {
      "path": "pubspec.yaml",
      "data":
          "bmFtZToge3twcm9qZWN0X25hbWV9fV9sb2dnaW5nCmRlc2NyaXB0aW9uOiBMb2dnaW5nIG9mIHt7cHJvamVjdF9uYW1lLnRpdGxlQ2FzZSgpfX0uCnZlcnNpb246IDAuMC4xCnB1Ymxpc2hfdG86IG5vbmUKCmVudmlyb25tZW50OgogIHNkazogIj49My4wLjAgPDQuMC4wIgoKZGVwZW5kZW5jaWVzOgogIG1ldGE6IF4xLjkuMQogIGluamVjdGFibGU6IF4yLjEuMgoKZGV2X2RlcGVuZGVuY2llczoKICBsaW50czogXjIuMS4xCiAgdGVzdDogXjEuMjQuNAogIG1vY2t0YWlsOiBeMC4zLjAKICBidWlsZF9ydW5uZXI6IF4yLjQuNgogIGluamVjdGFibGVfZ2VuZXJhdG9yOiBeMi4xLjYK",
      "type": "text"
    },
    {
      "path": "README.md",
      "data":
          "PCEtLSAKVGhpcyBSRUFETUUgZGVzY3JpYmVzIHRoZSBwYWNrYWdlLiBJZiB5b3UgcHVibGlzaCB0aGlzIHBhY2thZ2UgdG8gcHViLmRldiwKdGhpcyBSRUFETUUncyBjb250ZW50cyBhcHBlYXIgb24gdGhlIGxhbmRpbmcgcGFnZSBmb3IgeW91ciBwYWNrYWdlLgoKRm9yIGluZm9ybWF0aW9uIGFib3V0IGhvdyB0byB3cml0ZSBhIGdvb2QgcGFja2FnZSBSRUFETUUsIHNlZSB0aGUgZ3VpZGUgZm9yClt3cml0aW5nIHBhY2thZ2UgcGFnZXNdKGh0dHBzOi8vZGFydC5kZXYvZ3VpZGVzL2xpYnJhcmllcy93cml0aW5nLXBhY2thZ2UtcGFnZXMpLiAKCkZvciBnZW5lcmFsIGluZm9ybWF0aW9uIGFib3V0IGRldmVsb3BpbmcgcGFja2FnZXMsIHNlZSB0aGUgRGFydCBndWlkZSBmb3IKW2NyZWF0aW5nIHBhY2thZ2VzXShodHRwczovL2RhcnQuZGV2L2d1aWRlcy9saWJyYXJpZXMvY3JlYXRlLWxpYnJhcnktcGFja2FnZXMpCmFuZCB0aGUgRmx1dHRlciBndWlkZSBmb3IKW2RldmVsb3BpbmcgcGFja2FnZXMgYW5kIHBsdWdpbnNdKGh0dHBzOi8vZmx1dHRlci5kZXYvZGV2ZWxvcGluZy1wYWNrYWdlcykuIAotLT4KClRPRE86IFB1dCBhIHNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSBwYWNrYWdlIGhlcmUgdGhhdCBoZWxwcyBwb3RlbnRpYWwgdXNlcnMKa25vdyB3aGV0aGVyIHRoaXMgcGFja2FnZSBtaWdodCBiZSB1c2VmdWwgZm9yIHRoZW0uCgojIyBGZWF0dXJlcwoKVE9ETzogTGlzdCB3aGF0IHlvdXIgcGFja2FnZSBjYW4gZG8uIE1heWJlIGluY2x1ZGUgaW1hZ2VzLCBnaWZzLCBvciB2aWRlb3MuCgojIyBHZXR0aW5nIHN0YXJ0ZWQKClRPRE86IExpc3QgcHJlcmVxdWlzaXRlcyBhbmQgcHJvdmlkZSBvciBwb2ludCB0byBpbmZvcm1hdGlvbiBvbiBob3cgdG8Kc3RhcnQgdXNpbmcgdGhlIHBhY2thZ2UuCgojIyBVc2FnZQoKVE9ETzogSW5jbHVkZSBzaG9ydCBhbmQgdXNlZnVsIGV4YW1wbGVzIGZvciBwYWNrYWdlIHVzZXJzLiBBZGQgbG9uZ2VyIGV4YW1wbGVzCnRvIGAvZXhhbXBsZWAgZm9sZGVyLiAKCmBgYGRhcnQKY29uc3QgbGlrZSA9ICdzYW1wbGUnOwpgYGAKCiMjIEFkZGl0aW9uYWwgaW5mb3JtYXRpb24KClRPRE86IFRlbGwgdXNlcnMgbW9yZSBhYm91dCB0aGUgcGFja2FnZTogd2hlcmUgdG8gZmluZCBtb3JlIGluZm9ybWF0aW9uLCBob3cgdG8gCmNvbnRyaWJ1dGUgdG8gdGhlIHBhY2thZ2UsIGhvdyB0byBmaWxlIGlzc3Vlcywgd2hhdCByZXNwb25zZSB0aGV5IGNhbiBleHBlY3QgCmZyb20gdGhlIHBhY2thZ2UgYXV0aG9ycywgYW5kIG1vcmUuCg==",
      "type": "text"
    },
    {
      "path": "test/mocks.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOm1vY2t0YWlsL21vY2t0YWlsLmRhcnQnOwoKYWJzdHJhY3QgY2xhc3MgX0xvZ0NvbW1hbmQgewogIHZvaWQgY2FsbCgKICAgIFN0cmluZyBtZXNzYWdlLCB7CiAgICBpbnQgbGV2ZWwsCiAgICBPYmplY3Q/IGVycm9yLAogICAgU3RhY2tUcmFjZT8gc3RhY2tUcmFjZSwKICB9KTsKfQoKY2xhc3MgTW9ja0xvZ0NvbW1hbmQgZXh0ZW5kcyBNb2NrIGltcGxlbWVudHMgX0xvZ0NvbW1hbmQgewogIE1vY2tMb2dDb21tYW5kKCkgewogICAgd2hlbigKICAgICAgKCkgPT4gY2FsbCgKICAgICAgICBhbnkoKSwKICAgICAgICBsZXZlbDogYW55KG5hbWVkOiAnbGV2ZWwnKSwKICAgICAgICBlcnJvcjogYW55KG5hbWVkOiAnZXJyb3InKSwKICAgICAgICBzdGFja1RyYWNlOiBhbnkobmFtZWQ6ICdzdGFja1RyYWNlJyksCiAgICAgICksCiAgICApLnRoZW5SZXR1cm4obnVsbCk7CiAgfQp9CgpjbGFzcyBNb2NrU3RhY2tUcmFjZSBleHRlbmRzIE1vY2sgaW1wbGVtZW50cyBTdGFja1RyYWNlIHt9Cg==",
      "type": "text"
    },
    {
      "path": "test/src/logger_test.dart",
      "data":
          "",
      "type": "text"
    }
  ],
  "hooks": [],
  "name": "logging_package",
  "description": "A brick generating the logging package of a Rapid project.",
  "version": "0.1.0",
  "environment": {"mason": ">=0.1.0-dev <0.1.0"},
  "readme": {
    "path": "README.md",
    "data": "IyBsb2dnaW5nX3BhY2thZ2UKClRPRE8K",
    "type": "text"
  },
  "changelog": {
    "path": "CHANGELOG.md",
    "data": "IyAwLjEuMAoKLSBUT0RPOiBEZXNjcmliZSBpbml0aWFsIHJlbGVhc2UuCg==",
    "type": "text"
  },
  "vars": {
    "project_name": {"type": "string"}
  }
});
