name: {{project_name}}

packages:
  - packages/**

command:
  bootstrap:
    # https://github.com/dart-lang/pub/issues/3404)
    runPubGetInParallel: false

  clean:
    hooks:
      post: melos exec -c 3 -- "flutter clean"

ide:
  intellij: false

scripts:
  analyze:
    run: flutter analyze
    description: Analyze all packages.

  format:
    run: dart format . --fix
    description: Format all packages.

  gen-code:
    exec: flutter pub run build_runner build --delete-conflicting-outputs
    description: Run code generation in a package.
    packageFilters:
      dependsOn:
        - build_runner

  gen-code:watch:
    exec: flutter pub run build_runner watch --delete-conflicting-outputs
    description: Run code generation in a package. (Watch mode)
    packageFilters:
      dependsOn:
        - build_runner

  gen-l10n:
    exec: flutter gen-l10n --format
    description: (Re)-generate localizations in a package.
    packageFilters:
      dependsOn:
        - flutter_localizations
        - intl

  run:dev:
    exec: flutter run -t lib/main_development.dart
    description: Run app in debug mode. (development)
    packageFilters:
      fileExists:
        - lib/main_development.dart

  run:test:
    exec: flutter run -t lib/main_test.dart
    description: Run app in debug mode. (test)
    packageFilters:
      fileExists:
        - lib/main_test.dart

  run:prod:
    exec: flutter run -t lib/main_production.dart
    description: Run app in debug mode. (production)
    packageFilters:
      fileExists:
        - lib/main_production.dart

  test:
    exec: flutter test
    description: Run `flutter test` in a package.
    packageFilters:
      dirExists:
        - test

  test:coverage:
    exec: flutter test --coverage
    description: Run `flutter test --coverage` in a package.
    packageFilters:
      dirExists:
        - test

  test:update:goldens:
    exec: flutter test --update-goldens
    description: Update goldens of a package.
    packageFilters:
      dirExists:
        - test
      dependsOn:
        - alchemist

  test:e2e:dev:
    exec: flutter test integration_test/development_test.dart
    description: |
      Run e2e tests in non web root package. (development)
    packageFilters:
      ignore: "*web*"
      fileExists:
        - integration_test/development_test.dart
      dependsOn:
        - integration_test

  test:e2e:dev:web:
    exec: |
      flutter drive \
        --driver=test_driver/integration_test.dart \
        --target=integration_test/development_test.dart \
        -d chrome
    description: |
      Run e2e tests in web root package. (development)
       - Requires `chromedriver` 
        (can be installed via https://chromedriver.chromium.org/downloads).
        (can be installed via `brew install --cask chromedriver` on macOS).
       - Requires running `chromedriver --port=4444`
    packageFilters:
      scope: "*web*"
      fileExists:
        - integration_test/development_test.dart
      dependsOn:
        - integration_test

  test:e2e:test:
    exec: flutter test integration_test/test_test.dart
    description: |
      Run e2e tests in non web root package. (test)
    packageFilters:
      ignore: "*web*"
      fileExists:
        - integration_test/test_test.dart
      dependsOn:
        - integration_test

  test:e2e:test:web:
    exec: |
      flutter drive \
        --driver=test_driver/integration_test.dart \
        --target=integration_test/test_test.dart \
        -d chrome
    description: |
      Run e2e tests in web root package. (test)
       - Requires `chromedriver` 
        (can be installed via https://chromedriver.chromium.org/downloads).
        (can be installed via `brew install --cask chromedriver` on macOS).
       - Requires running `chromedriver --port=4444`
    packageFilters:
      scope: "*web*"
      fileExists:
        - integration_test/test_test.dart
      dependsOn:
        - integration_test

  test:e2e:prod:
    exec: flutter test integration_test/production_test.dart
    description: |
      Run e2e tests in non web root package. (production)
    packageFilters:
      ignore: "*web*"
      fileExists:
        - integration_test/production_test.dart
      dependsOn:
        - integration_test

  test:e2e:prod:web:
    exec: |
      flutter drive \
        --driver=test_driver/integration_test.dart \
        --target=integration_test/production_test.dart \
        -d chrome
    description: |
      Run e2e tests in web root package. (production)
       - Requires `chromedriver` 
        (can be installed via https://chromedriver.chromium.org/downloads).
        (can be installed via `brew install --cask chromedriver` on macOS).
       - Requires running `chromedriver --port=4444`
    packageFilters:
      scope: "*web*"
      fileExists:
        - integration_test/production_test.dart
      dependsOn:
        - integration_test

  coverage:
    exec: test_cov_console -t
    description: |
      Calculate coverage for a package.
       - Requires `test_cov_console` (can be installed via `dart pub global activate test_cov_console`).
    packageFilters:
      fileExists:
        - coverage/lcov.info

  coverage:html:
    exec: genhtml coverage/lcov.info -o coverage/html
    description: |
      Generate a html-coverage report for a package.
       - Requires `lcov` (can be installed via `brew install lcov` on macOS).
    packageFilters:
      fileExists:
        - coverage/lcov.info
