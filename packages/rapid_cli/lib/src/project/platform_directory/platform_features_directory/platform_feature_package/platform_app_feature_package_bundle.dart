// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint, implicit_dynamic_list_literal, implicit_dynamic_map_literal, inference_failure_on_collection_literal

import 'package:mason/mason.dart';

final platformAppFeaturePackageBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": ".gitignore",
      "data":
          "IyBNaXNjZWxsYW5lb3VzCiouY2xhc3MKKi5sb2cKKi5weWMKKi5zd3AKLkRTX1N0b3JlCi5hdG9tLwouYnVpbGRsb2cvCi5oaXN0b3J5Ci5zdm4vCm1pZ3JhdGVfd29ya2luZ19kaXIvCgojIEludGVsbGlKIHJlbGF0ZWQKKi5pbWwKKi5pcHIKKi5pd3MKLmlkZWEvCgojIFRoZSAudnNjb2RlIGZvbGRlciBjb250YWlucyBsYXVuY2ggY29uZmlndXJhdGlvbiBhbmQgdGFza3MgeW91IGNvbmZpZ3VyZSBpbgojIFZTIENvZGUgd2hpY2ggeW91IG1heSB3aXNoIHRvIGJlIGluY2x1ZGVkIGluIHZlcnNpb24gY29udHJvbCwgc28gdGhpcyBsaW5lCiMgaXMgY29tbWVudGVkIG91dCBieSBkZWZhdWx0LgojLnZzY29kZS8KCiMgRmx1dHRlci9EYXJ0L1B1YiByZWxhdGVkCioqL2RvYy9hcGkvCioqL2lvcy9GbHV0dGVyLy5sYXN0X2J1aWxkX2lkCi5kYXJ0X3Rvb2wvCi5mbHV0dGVyLXBsdWdpbnMKLmZsdXR0ZXItcGx1Z2lucy1kZXBlbmRlbmNpZXMKLnBhY2thZ2VzCi5wdWItY2FjaGUvCi5wdWIvCi9idWlsZC8KL2NvdmVyYWdlCg==",
      "type": "text"
    },
    {
      "path": "analysis_options.yaml",
      "data":
          "aW5jbHVkZTogcGFja2FnZTpmbHV0dGVyX2xpbnRzL2ZsdXR0ZXIueWFtbAoKIyBBZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFib3V0IHRoaXMgZmlsZSBjYW4gYmUgZm91bmQgYXQKIyBodHRwczovL2RhcnQuZGV2L2d1aWRlcy9sYW5ndWFnZS9hbmFseXNpcy1vcHRpb25zCg==",
      "type": "text"
    },
    {
      "path": "CHANGELOG.md",
      "data": "IyMgMC4wLjEKCiogVE9ETzogRGVzY3JpYmUgaW5pdGlhbCByZWxlYXNlLgo=",
      "type": "text"
    },
    {
      "path": "l10n.yaml",
      "data":
          "e3sjYW5kcm9pZH19YXJiLWRpcjogbGliL3NyYy9wcmVzZW50YXRpb24vbDEwbi9hcmIKb3V0cHV0LWNsYXNzOiB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUFuZHJvaWRBcHBMb2NhbGl6YXRpb25zCm91dHB1dC1kaXI6IGxpYi9zcmMvcHJlc2VudGF0aW9uL2wxMG4KdGVtcGxhdGUtYXJiLWZpbGU6IGFwcF97e2RlZmF1bHRfbGFuZ3VhZ2V9fS5hcmIKb3V0cHV0LWxvY2FsaXphdGlvbi1maWxlOiB7e3Byb2plY3RfbmFtZX19X2FuZHJvaWRfYXBwX2xvY2FsaXphdGlvbnMuZGFydApudWxsYWJsZS1nZXR0ZXI6IGZhbHNlCnN5bnRoZXRpYy1wYWNrYWdlOiBmYWxzZQpoZWFkZXI6IC8vIGNvdmVyYWdlOmlnbm9yZS1maWxlCnt7L2FuZHJvaWR9fXt7I2lvc319YXJiLWRpcjogbGliL3NyYy9wcmVzZW50YXRpb24vbDEwbi9hcmIKb3V0cHV0LWNsYXNzOiB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUlvc0FwcExvY2FsaXphdGlvbnMKb3V0cHV0LWRpcjogbGliL3NyYy9wcmVzZW50YXRpb24vbDEwbgp0ZW1wbGF0ZS1hcmItZmlsZTogYXBwX3t7ZGVmYXVsdF9sYW5ndWFnZX19LmFyYgpvdXRwdXQtbG9jYWxpemF0aW9uLWZpbGU6IHt7cHJvamVjdF9uYW1lfX1faW9zX2FwcF9sb2NhbGl6YXRpb25zLmRhcnQKbnVsbGFibGUtZ2V0dGVyOiBmYWxzZQpzeW50aGV0aWMtcGFja2FnZTogZmFsc2UKaGVhZGVyOiAvLyBjb3ZlcmFnZTppZ25vcmUtZmlsZQp7ey9pb3N9fXt7I2xpbnV4fX1hcmItZGlyOiBsaWIvc3JjL3ByZXNlbnRhdGlvbi9sMTBuL2FyYgpvdXRwdXQtY2xhc3M6IHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TGludXhBcHBMb2NhbGl6YXRpb25zCm91dHB1dC1kaXI6IGxpYi9zcmMvcHJlc2VudGF0aW9uL2wxMG4KdGVtcGxhdGUtYXJiLWZpbGU6IGFwcF97e2RlZmF1bHRfbGFuZ3VhZ2V9fS5hcmIKb3V0cHV0LWxvY2FsaXphdGlvbi1maWxlOiB7e3Byb2plY3RfbmFtZX19X2xpbnV4X2FwcF9sb2NhbGl6YXRpb25zLmRhcnQKbnVsbGFibGUtZ2V0dGVyOiBmYWxzZQpzeW50aGV0aWMtcGFja2FnZTogZmFsc2UKaGVhZGVyOiAvLyBjb3ZlcmFnZTppZ25vcmUtZmlsZQp7ey9saW51eH19e3sjbWFjb3N9fWFyYi1kaXI6IGxpYi9zcmMvcHJlc2VudGF0aW9uL2wxMG4vYXJiCm91dHB1dC1jbGFzczoge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1NYWNvc0FwcExvY2FsaXphdGlvbnMKb3V0cHV0LWRpcjogbGliL3NyYy9wcmVzZW50YXRpb24vbDEwbgp0ZW1wbGF0ZS1hcmItZmlsZTogYXBwX3t7ZGVmYXVsdF9sYW5ndWFnZX19LmFyYgpvdXRwdXQtbG9jYWxpemF0aW9uLWZpbGU6IHt7cHJvamVjdF9uYW1lfX1fbWFjb3NfYXBwX2xvY2FsaXphdGlvbnMuZGFydApudWxsYWJsZS1nZXR0ZXI6IGZhbHNlCnN5bnRoZXRpYy1wYWNrYWdlOiBmYWxzZQpoZWFkZXI6IC8vIGNvdmVyYWdlOmlnbm9yZS1maWxlCnt7L21hY29zfX17eyN3ZWJ9fWFyYi1kaXI6IGxpYi9zcmMvcHJlc2VudGF0aW9uL2wxMG4vYXJiCm91dHB1dC1jbGFzczoge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1XZWJBcHBMb2NhbGl6YXRpb25zCm91dHB1dC1kaXI6IGxpYi9zcmMvcHJlc2VudGF0aW9uL2wxMG4KdGVtcGxhdGUtYXJiLWZpbGU6IGFwcF97e2RlZmF1bHRfbGFuZ3VhZ2V9fS5hcmIKb3V0cHV0LWxvY2FsaXphdGlvbi1maWxlOiB7e3Byb2plY3RfbmFtZX19X3dlYl9hcHBfbG9jYWxpemF0aW9ucy5kYXJ0Cm51bGxhYmxlLWdldHRlcjogZmFsc2UKc3ludGhldGljLXBhY2thZ2U6IGZhbHNlCmhlYWRlcjogLy8gY292ZXJhZ2U6aWdub3JlLWZpbGUKe3svd2VifX17eyN3aW5kb3dzfX1hcmItZGlyOiBsaWIvc3JjL3ByZXNlbnRhdGlvbi9sMTBuL2FyYgpvdXRwdXQtY2xhc3M6IHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19V2luZG93c0FwcExvY2FsaXphdGlvbnMKb3V0cHV0LWRpcjogbGliL3NyYy9wcmVzZW50YXRpb24vbDEwbgp0ZW1wbGF0ZS1hcmItZmlsZTogYXBwX3t7ZGVmYXVsdF9sYW5ndWFnZX19LmFyYgpvdXRwdXQtbG9jYWxpemF0aW9uLWZpbGU6IHt7cHJvamVjdF9uYW1lfX1fd2luZG93c19hcHBfbG9jYWxpemF0aW9ucy5kYXJ0Cm51bGxhYmxlLWdldHRlcjogZmFsc2UKc3ludGhldGljLXBhY2thZ2U6IGZhbHNlCmhlYWRlcjogLy8gY292ZXJhZ2U6aWdub3JlLWZpbGUKe3svd2luZG93c319",
      "type": "text"
    },
    {
      "path": "lib/src/injection.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOmluamVjdGFibGUvaW5qZWN0YWJsZS5kYXJ0JzsKCi8vLyBTZXR1cCBpbmplY3RhYmxlIHBhY2thZ2Ugd2hpY2ggZ2VuZXJhdGVzIGRlcGVuZGVuY3kgaW5qZWN0aW9uIGNvZGUuCi8vLwovLy8gRm9yIG1vcmUgaW5mbyBzZWU6IGh0dHBzOi8vcHViLmRldi9wYWNrYWdlcy9pbmplY3RhYmxlCkBJbmplY3RhYmxlSW5pdC5taWNyb1BhY2thZ2UoKQppbml0TWljcm9QYWNrYWdlKCkge30K",
      "type": "text"
    },
    {
      "path": "lib/src/injection.module.dart",
      "data":
          "e3sjYW5kcm9pZH19Ly8gY292ZXJhZ2U6aWdub3JlLWZpbGUKLy9AR2VuZXJhdGVkTWljcm9Nb2R1bGU7e3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1BbmRyb2lkQXBwUGFja2FnZU1vZHVsZTtwYWNrYWdlOnt7cHJvamVjdF9uYW1lfX1fYW5kcm9pZF9hcHAvc3JjL2luamVjdGlvbi5tb2R1bGUuZGFydAovLyBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRlkgQlkgSEFORAovLyBpZ25vcmVfZm9yX2ZpbGU6IG5vX2xlYWRpbmdfdW5kZXJzY29yZXNfZm9yX2xpYnJhcnlfcHJlZml4ZXMKaW1wb3J0ICdkYXJ0OmFzeW5jJyBhcyBfaTI7CgppbXBvcnQgJ3BhY2thZ2U6aW5qZWN0YWJsZS9pbmplY3RhYmxlLmRhcnQnIGFzIF9pMTsKCi8vIGlnbm9yZV9mb3JfZmlsZTogdW5uZWNlc3NhcnlfbGFtYmRhcwovLyBpZ25vcmVfZm9yX2ZpbGU6IGxpbmVzX2xvbmdlcl90aGFuXzgwX2NoYXJzCmNsYXNzIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19QW5kcm9pZEFwcFBhY2thZ2VNb2R1bGUgZXh0ZW5kcyBfaTEuTWljcm9QYWNrYWdlTW9kdWxlIHsKICAvLyBpbml0aWFsaXplcyB0aGUgcmVnaXN0cmF0aW9uIG9mIG1haW4tc2NvcGUgZGVwZW5kZW5jaWVzIGluc2lkZSBvZiBbR2V0SXRdCiAgQG92ZXJyaWRlCiAgX2kyLkZ1dHVyZU9yPHZvaWQ+IGluaXQoX2kxLkdldEl0SGVscGVyIGdoKSB7fQp9Cnt7L2FuZHJvaWR9fXt7I2lvc319Ly8gY292ZXJhZ2U6aWdub3JlLWZpbGUKLy9AR2VuZXJhdGVkTWljcm9Nb2R1bGU7e3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1Jb3NBcHBQYWNrYWdlTW9kdWxlO3BhY2thZ2U6e3twcm9qZWN0X25hbWV9fV9pb3NfYXBwL3NyYy9pbmplY3Rpb24ubW9kdWxlLmRhcnQKLy8gR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZIEJZIEhBTkQKLy8gaWdub3JlX2Zvcl9maWxlOiBub19sZWFkaW5nX3VuZGVyc2NvcmVzX2Zvcl9saWJyYXJ5X3ByZWZpeGVzCmltcG9ydCAnZGFydDphc3luYycgYXMgX2kyOwoKaW1wb3J0ICdwYWNrYWdlOmluamVjdGFibGUvaW5qZWN0YWJsZS5kYXJ0JyBhcyBfaTE7CgovLyBpZ25vcmVfZm9yX2ZpbGU6IHVubmVjZXNzYXJ5X2xhbWJkYXMKLy8gaWdub3JlX2Zvcl9maWxlOiBsaW5lc19sb25nZXJfdGhhbl84MF9jaGFycwpjbGFzcyB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUlvc0FwcFBhY2thZ2VNb2R1bGUgZXh0ZW5kcyBfaTEuTWljcm9QYWNrYWdlTW9kdWxlIHsKICAvLyBpbml0aWFsaXplcyB0aGUgcmVnaXN0cmF0aW9uIG9mIG1haW4tc2NvcGUgZGVwZW5kZW5jaWVzIGluc2lkZSBvZiBbR2V0SXRdCiAgQG92ZXJyaWRlCiAgX2kyLkZ1dHVyZU9yPHZvaWQ+IGluaXQoX2kxLkdldEl0SGVscGVyIGdoKSB7fQp9Cnt7L2lvc319e3sjbGludXh9fS8vIGNvdmVyYWdlOmlnbm9yZS1maWxlCi8vQEdlbmVyYXRlZE1pY3JvTW9kdWxlO3t7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TGludXhBcHBQYWNrYWdlTW9kdWxlO3BhY2thZ2U6e3twcm9qZWN0X25hbWV9fV9saW51eF9hcHAvc3JjL2luamVjdGlvbi5tb2R1bGUuZGFydAovLyBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRlkgQlkgSEFORAovLyBpZ25vcmVfZm9yX2ZpbGU6IG5vX2xlYWRpbmdfdW5kZXJzY29yZXNfZm9yX2xpYnJhcnlfcHJlZml4ZXMKaW1wb3J0ICdkYXJ0OmFzeW5jJyBhcyBfaTI7CgppbXBvcnQgJ3BhY2thZ2U6aW5qZWN0YWJsZS9pbmplY3RhYmxlLmRhcnQnIGFzIF9pMTsKCi8vIGlnbm9yZV9mb3JfZmlsZTogdW5uZWNlc3NhcnlfbGFtYmRhcwovLyBpZ25vcmVfZm9yX2ZpbGU6IGxpbmVzX2xvbmdlcl90aGFuXzgwX2NoYXJzCmNsYXNzIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TGludXhBcHBQYWNrYWdlTW9kdWxlIGV4dGVuZHMgX2kxLk1pY3JvUGFja2FnZU1vZHVsZSB7CiAgLy8gaW5pdGlhbGl6ZXMgdGhlIHJlZ2lzdHJhdGlvbiBvZiBtYWluLXNjb3BlIGRlcGVuZGVuY2llcyBpbnNpZGUgb2YgW0dldEl0XQogIEBvdmVycmlkZQogIF9pMi5GdXR1cmVPcjx2b2lkPiBpbml0KF9pMS5HZXRJdEhlbHBlciBnaCkge30KfQp7ey9saW51eH19e3sjbWFjb3N9fS8vIGNvdmVyYWdlOmlnbm9yZS1maWxlCi8vQEdlbmVyYXRlZE1pY3JvTW9kdWxlO3t7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TWFjb3NBcHBQYWNrYWdlTW9kdWxlO3BhY2thZ2U6e3twcm9qZWN0X25hbWV9fV9tYWNvc19hcHAvc3JjL2luamVjdGlvbi5tb2R1bGUuZGFydAovLyBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRlkgQlkgSEFORAovLyBpZ25vcmVfZm9yX2ZpbGU6IG5vX2xlYWRpbmdfdW5kZXJzY29yZXNfZm9yX2xpYnJhcnlfcHJlZml4ZXMKaW1wb3J0ICdkYXJ0OmFzeW5jJyBhcyBfaTI7CgppbXBvcnQgJ3BhY2thZ2U6aW5qZWN0YWJsZS9pbmplY3RhYmxlLmRhcnQnIGFzIF9pMTsKCi8vIGlnbm9yZV9mb3JfZmlsZTogdW5uZWNlc3NhcnlfbGFtYmRhcwovLyBpZ25vcmVfZm9yX2ZpbGU6IGxpbmVzX2xvbmdlcl90aGFuXzgwX2NoYXJzCmNsYXNzIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19TWFjb3NBcHBQYWNrYWdlTW9kdWxlIGV4dGVuZHMgX2kxLk1pY3JvUGFja2FnZU1vZHVsZSB7CiAgLy8gaW5pdGlhbGl6ZXMgdGhlIHJlZ2lzdHJhdGlvbiBvZiBtYWluLXNjb3BlIGRlcGVuZGVuY2llcyBpbnNpZGUgb2YgW0dldEl0XQogIEBvdmVycmlkZQogIF9pMi5GdXR1cmVPcjx2b2lkPiBpbml0KF9pMS5HZXRJdEhlbHBlciBnaCkge30KfQp7ey9tYWNvc319e3sjd2VifX0vLyBjb3ZlcmFnZTppZ25vcmUtZmlsZQovL0BHZW5lcmF0ZWRNaWNyb01vZHVsZTt7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fVdlYkFwcFBhY2thZ2VNb2R1bGU7cGFja2FnZTp7e3Byb2plY3RfbmFtZX19X3dlYl9hcHAvc3JjL2luamVjdGlvbi5tb2R1bGUuZGFydAovLyBHRU5FUkFURUQgQ09ERSAtIERPIE5PVCBNT0RJRlkgQlkgSEFORAovLyBpZ25vcmVfZm9yX2ZpbGU6IG5vX2xlYWRpbmdfdW5kZXJzY29yZXNfZm9yX2xpYnJhcnlfcHJlZml4ZXMKaW1wb3J0ICdkYXJ0OmFzeW5jJyBhcyBfaTI7CgppbXBvcnQgJ3BhY2thZ2U6aW5qZWN0YWJsZS9pbmplY3RhYmxlLmRhcnQnIGFzIF9pMTsKCi8vIGlnbm9yZV9mb3JfZmlsZTogdW5uZWNlc3NhcnlfbGFtYmRhcwovLyBpZ25vcmVfZm9yX2ZpbGU6IGxpbmVzX2xvbmdlcl90aGFuXzgwX2NoYXJzCmNsYXNzIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19V2ViQXBwUGFja2FnZU1vZHVsZSBleHRlbmRzIF9pMS5NaWNyb1BhY2thZ2VNb2R1bGUgewogIC8vIGluaXRpYWxpemVzIHRoZSByZWdpc3RyYXRpb24gb2YgbWFpbi1zY29wZSBkZXBlbmRlbmNpZXMgaW5zaWRlIG9mIFtHZXRJdF0KICBAb3ZlcnJpZGUKICBfaTIuRnV0dXJlT3I8dm9pZD4gaW5pdChfaTEuR2V0SXRIZWxwZXIgZ2gpIHt9Cn0Ke3svd2VifX17eyN3aW5kb3dzfX0vLyBjb3ZlcmFnZTppZ25vcmUtZmlsZQovL0BHZW5lcmF0ZWRNaWNyb01vZHVsZTt7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fVdpbmRvd3NBcHBQYWNrYWdlTW9kdWxlO3BhY2thZ2U6e3twcm9qZWN0X25hbWV9fV93aW5kb3dzX2FwcC9zcmMvaW5qZWN0aW9uLm1vZHVsZS5kYXJ0Ci8vIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWSBCWSBIQU5ECi8vIGlnbm9yZV9mb3JfZmlsZTogbm9fbGVhZGluZ191bmRlcnNjb3Jlc19mb3JfbGlicmFyeV9wcmVmaXhlcwppbXBvcnQgJ2RhcnQ6YXN5bmMnIGFzIF9pMjsKCmltcG9ydCAncGFja2FnZTppbmplY3RhYmxlL2luamVjdGFibGUuZGFydCcgYXMgX2kxOwoKLy8gaWdub3JlX2Zvcl9maWxlOiB1bm5lY2Vzc2FyeV9sYW1iZGFzCi8vIGlnbm9yZV9mb3JfZmlsZTogbGluZXNfbG9uZ2VyX3RoYW5fODBfY2hhcnMKY2xhc3Mge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1XaW5kb3dzQXBwUGFja2FnZU1vZHVsZSBleHRlbmRzIF9pMS5NaWNyb1BhY2thZ2VNb2R1bGUgewogIC8vIGluaXRpYWxpemVzIHRoZSByZWdpc3RyYXRpb24gb2YgbWFpbi1zY29wZSBkZXBlbmRlbmNpZXMgaW5zaWRlIG9mIFtHZXRJdF0KICBAb3ZlcnJpZGUKICBfaTIuRnV0dXJlT3I8dm9pZD4gaW5pdChfaTEuR2V0SXRIZWxwZXIgZ2gpIHt9Cn0Ke3svd2luZG93c319",
      "type": "text"
    },
    {
      "path": "lib/src/presentation/app.dart",
      "data":
          "",
      "type": "text"
    },
    {
      "path": "lib/src/presentation/l10n/l10n.dart",
      "data":
          "e3sjYW5kcm9pZH19Ly8gY292ZXJhZ2U6aWdub3JlLWZpbGUKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvd2lkZ2V0cy5kYXJ0JzsKCmltcG9ydCAne3twcm9qZWN0X25hbWV9fV9hbmRyb2lkX2FwcF9sb2NhbGl6YXRpb25zLmRhcnQnOwoKZXhwb3J0ICd7e3Byb2plY3RfbmFtZX19X2FuZHJvaWRfYXBwX2xvY2FsaXphdGlvbnMuZGFydCc7CgpleHRlbnNpb24ge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1BbmRyb2lkQXBwTG9jYWxpemF0aW9uc1ggb24gQnVpbGRDb250ZXh0IHsKICAvLy8gVGhlIGwxMG4gb2JqZWN0IHdoaWNoIGhvbGRzIGFsbCBsb2NhbGl6ZWQgc3RyaW5ncy4KICB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUFuZHJvaWRBcHBMb2NhbGl6YXRpb25zIGdldCBsMTBuID0+CiAgICAgIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19QW5kcm9pZEFwcExvY2FsaXphdGlvbnMub2YodGhpcyk7Cn0Ke3svYW5kcm9pZH19e3sjaW9zfX0vLyBjb3ZlcmFnZTppZ25vcmUtZmlsZQppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci93aWRnZXRzLmRhcnQnOwoKaW1wb3J0ICd7e3Byb2plY3RfbmFtZX19X2lvc19hcHBfbG9jYWxpemF0aW9ucy5kYXJ0JzsKCmV4cG9ydCAne3twcm9qZWN0X25hbWV9fV9pb3NfYXBwX2xvY2FsaXphdGlvbnMuZGFydCc7CgpleHRlbnNpb24ge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1Jb3NBcHBMb2NhbGl6YXRpb25zWCBvbiBCdWlsZENvbnRleHQgewogIC8vLyBUaGUgbDEwbiBvYmplY3Qgd2hpY2ggaG9sZHMgYWxsIGxvY2FsaXplZCBzdHJpbmdzLgogIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19SW9zQXBwTG9jYWxpemF0aW9ucyBnZXQgbDEwbiA9PgogICAgICB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUlvc0FwcExvY2FsaXphdGlvbnMub2YodGhpcyk7Cn0Ke3svaW9zfX17eyNsaW51eH19Ly8gY292ZXJhZ2U6aWdub3JlLWZpbGUKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvd2lkZ2V0cy5kYXJ0JzsKCmltcG9ydCAne3twcm9qZWN0X25hbWV9fV9saW51eF9hcHBfbG9jYWxpemF0aW9ucy5kYXJ0JzsKCmV4cG9ydCAne3twcm9qZWN0X25hbWV9fV9saW51eF9hcHBfbG9jYWxpemF0aW9ucy5kYXJ0JzsKCmV4dGVuc2lvbiB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUxpbnV4QXBwTG9jYWxpemF0aW9uc1ggb24gQnVpbGRDb250ZXh0IHsKICAvLy8gVGhlIGwxMG4gb2JqZWN0IHdoaWNoIGhvbGRzIGFsbCBsb2NhbGl6ZWQgc3RyaW5ncy4KICB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUxpbnV4QXBwTG9jYWxpemF0aW9ucyBnZXQgbDEwbiA9PgogICAgICB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fUxpbnV4QXBwTG9jYWxpemF0aW9ucy5vZih0aGlzKTsKfQp7ey9saW51eH19e3sjbWFjb3N9fS8vIGNvdmVyYWdlOmlnbm9yZS1maWxlCmltcG9ydCAncGFja2FnZTpmbHV0dGVyL3dpZGdldHMuZGFydCc7CgppbXBvcnQgJ3t7cHJvamVjdF9uYW1lfX1fbWFjb3NfYXBwX2xvY2FsaXphdGlvbnMuZGFydCc7CgpleHBvcnQgJ3t7cHJvamVjdF9uYW1lfX1fbWFjb3NfYXBwX2xvY2FsaXphdGlvbnMuZGFydCc7CgpleHRlbnNpb24ge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1NYWNvc0FwcExvY2FsaXphdGlvbnNYIG9uIEJ1aWxkQ29udGV4dCB7CiAgLy8vIFRoZSBsMTBuIG9iamVjdCB3aGljaCBob2xkcyBhbGwgbG9jYWxpemVkIHN0cmluZ3MuCiAge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1NYWNvc0FwcExvY2FsaXphdGlvbnMgZ2V0IGwxMG4gPT4KICAgICAge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1NYWNvc0FwcExvY2FsaXphdGlvbnMub2YodGhpcyk7Cn0Ke3svbWFjb3N9fXt7I3dlYn19Ly8gY292ZXJhZ2U6aWdub3JlLWZpbGUKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvd2lkZ2V0cy5kYXJ0JzsKCmltcG9ydCAne3twcm9qZWN0X25hbWV9fV93ZWJfYXBwX2xvY2FsaXphdGlvbnMuZGFydCc7CgpleHBvcnQgJ3t7cHJvamVjdF9uYW1lfX1fd2ViX2FwcF9sb2NhbGl6YXRpb25zLmRhcnQnOwoKZXh0ZW5zaW9uIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19V2ViQXBwTG9jYWxpemF0aW9uc1ggb24gQnVpbGRDb250ZXh0IHsKICAvLy8gVGhlIGwxMG4gb2JqZWN0IHdoaWNoIGhvbGRzIGFsbCBsb2NhbGl6ZWQgc3RyaW5ncy4KICB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fVdlYkFwcExvY2FsaXphdGlvbnMgZ2V0IGwxMG4gPT4KICAgICAge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1XZWJBcHBMb2NhbGl6YXRpb25zLm9mKHRoaXMpOwp9Cnt7L3dlYn19e3sjd2luZG93c319Ly8gY292ZXJhZ2U6aWdub3JlLWZpbGUKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvd2lkZ2V0cy5kYXJ0JzsKCmltcG9ydCAne3twcm9qZWN0X25hbWV9fV93aW5kb3dzX2FwcF9sb2NhbGl6YXRpb25zLmRhcnQnOwoKZXhwb3J0ICd7e3Byb2plY3RfbmFtZX19X3dpbmRvd3NfYXBwX2xvY2FsaXphdGlvbnMuZGFydCc7CgpleHRlbnNpb24ge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX1XaW5kb3dzQXBwTG9jYWxpemF0aW9uc1ggb24gQnVpbGRDb250ZXh0IHsKICAvLy8gVGhlIGwxMG4gb2JqZWN0IHdoaWNoIGhvbGRzIGFsbCBsb2NhbGl6ZWQgc3RyaW5ncy4KICB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fVdpbmRvd3NBcHBMb2NhbGl6YXRpb25zIGdldCBsMTBuID0+CiAgICAgIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19V2luZG93c0FwcExvY2FsaXphdGlvbnMub2YodGhpcyk7Cn0Ke3svd2luZG93c319",
      "type": "text"
    },
    {
      "path": "lib/src/presentation/presentation.dart",
      "data":
          "ZXhwb3J0ICdhcHAuZGFydCc7CmV4cG9ydCAnbDEwbi97e3Byb2plY3RfbmFtZX19X3t7I2FuZHJvaWR9fWFuZHJvaWR7ey9hbmRyb2lkfX17eyNpb3N9fWlvc3t7L2lvc319e3sjbGludXh9fWxpbnV4e3svbGludXh9fXt7I21hY29zfX1tYWNvc3t7L21hY29zfX17eyN3ZWJ9fXdlYnt7L3dlYn19e3sjd2luZG93c319d2luZG93c3t7L3dpbmRvd3N9fV9hcHBfbG9jYWxpemF0aW9ucy5kYXJ0JzsK",
      "type": "text"
    },
    {
      "path":
          "lib/{{project_name}}_{{#android}}android{{/android}}{{#ios}}ios{{/ios}}{{#linux}}linux{{/linux}}{{#macos}}macos{{/macos}}{{#web}}web{{/web}}{{#windows}}windows{{/windows}}_app.dart",
      "data":
          "Ly8vIFRoZSBBcHAgZmVhdHVyZSBvZiB7e3Byb2plY3RfbmFtZS50aXRsZUNhc2UoKX19IGZvciB7eyNhbmRyb2lkfX1BbmRyb2lke3svYW5kcm9pZH19e3sjaW9zfX1pT1N7ey9pb3N9fXt7I2xpbnV4fX1MaW51eHt7L2xpbnV4fX17eyNtYWNvc319bWFjT1N7ey9tYWNvc319e3sjd2VifX1XZWJ7ey93ZWJ9fXt7I3dpbmRvd3N9fVdpbmRvd3N7ey93aW5kb3dzfX0uCi8vLwovLy8gVG8gdXNlLCBpbXBvcnQgYHBhY2thZ2U6e3twcm9qZWN0X25hbWV9fXt7I2FuZHJvaWR9fV9hbmRyb2lkX2FwcHt7L2FuZHJvaWR9fXt7I2lvc319X2lvc19hcHB7ey9pb3N9fXt7I2xpbnV4fX1fbGludXhfYXBwe3svbGludXh9fXt7I21hY29zfX1fbWFjb3NfYXBwe3svbWFjb3N9fXt7I3dlYn19X3dlYl9hcHB7ey93ZWJ9fXt7I3dpbmRvd3N9fV93aW5kb3dzX2FwcHt7L3dpbmRvd3N9fS97e3Byb2plY3RfbmFtZX19e3sjYW5kcm9pZH19X2FuZHJvaWRfYXBwe3svYW5kcm9pZH19e3sjaW9zfX1faW9zX2FwcHt7L2lvc319e3sjbGludXh9fV9saW51eF9hcHB7ey9saW51eH19e3sjbWFjb3N9fV9tYWNvc19hcHB7ey9tYWNvc319e3sjd2VifX1fd2ViX2FwcHt7L3dlYn19e3sjd2luZG93c319X3dpbmRvd3NfYXBwe3svd2luZG93c319LmRhcnRgLgp7eyNhbmRyb2lkfX1saWJyYXJ5IHt7cHJvamVjdF9uYW1lfX1fYW5kcm9pZF9hcHA7e3svYW5kcm9pZH19e3sjaW9zfX1saWJyYXJ5IHt7cHJvamVjdF9uYW1lfX1faW9zX2FwcDt7ey9pb3N9fXt7I2xpbnV4fX1saWJyYXJ5IHt7cHJvamVjdF9uYW1lfX1fbGludXhfYXBwO3t7L2xpbnV4fX17eyNtYWNvc319bGlicmFyeSB7e3Byb2plY3RfbmFtZX19X21hY29zX2FwcDt7ey9tYWNvc319e3sjd2VifX1saWJyYXJ5IHt7cHJvamVjdF9uYW1lfX1fd2ViX2FwcDt7ey93ZWJ9fXt7I3dpbmRvd3N9fWxpYnJhcnkge3twcm9qZWN0X25hbWV9fV93aW5kb3dzX2FwcDt7ey93aW5kb3dzfX0KCmV4cG9ydCAnc3JjL2luamVjdGlvbi5tb2R1bGUuZGFydCc7CmV4cG9ydCAnc3JjL3ByZXNlbnRhdGlvbi9wcmVzZW50YXRpb24uZGFydCc7Cg==",
      "type": "text"
    },
    {
      "path": "LICENSE",
      "data": "VE9ETzogQWRkIHlvdXIgbGljZW5zZSBoZXJlLgo=",
      "type": "text"
    },
    {
      "path": "pubspec.lock",
      "data":
          "",
      "type": "text"
    },
    {
      "path": "pubspec.yaml",
      "data":
          "",
      "type": "text"
    },
    {
      "path": "pubspec_overrides.yaml",
      "data":
          "e3sjYW5kcm9pZH19CgoKCgoKCgoKCgoKCiMgbWVsb3NfbWFuYWdlZF9kZXBlbmRlbmN5X292ZXJyaWRlczoge3twcm9qZWN0X25hbWV9fV9kaSx7e3Byb2plY3RfbmFtZX19X2RvbWFpbix7e3Byb2plY3RfbmFtZX19X3VpLHt7cHJvamVjdF9uYW1lfX1fdWlfYW5kcm9pZApkZXBlbmRlbmN5X292ZXJyaWRlczoKICB7e3Byb2plY3RfbmFtZX19X2RpOgogICAgcGF0aDogLi4vLi4vLi4ve3twcm9qZWN0X25hbWV9fV9kaQogIHt7cHJvamVjdF9uYW1lfX1fZG9tYWluOgogICAgcGF0aDogLi4vLi4vLi4ve3twcm9qZWN0X25hbWV9fV9kb21haW4ve3twcm9qZWN0X25hbWV9fV9kb21haW4KICB7e3Byb2plY3RfbmFtZX19X3VpOgogICAgcGF0aDogLi4vLi4vLi4vLi4ve3twcm9qZWN0X25hbWV9fV91aS97e3Byb2plY3RfbmFtZX19X3VpCiAge3twcm9qZWN0X25hbWV9fV91aV9hbmRyb2lkOgogICAgcGF0aDogLi4vLi4vLi4vLi4ve3twcm9qZWN0X25hbWV9fV91aS97e3Byb2plY3RfbmFtZX19X3VpX2FuZHJvaWQKe3svYW5kcm9pZH19Cnt7I2lvc319CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiMgbWVsb3NfbWFuYWdlZF9kZXBlbmRlbmN5X292ZXJyaWRlczoge3twcm9qZWN0X25hbWV9fV9kaSx7e3Byb2plY3RfbmFtZX19X2RvbWFpbix7e3Byb2plY3RfbmFtZX19X3VpLHt7cHJvamVjdF9uYW1lfX1fdWlfaW9zCmRlcGVuZGVuY3lfb3ZlcnJpZGVzOgogIHt7cHJvamVjdF9uYW1lfX1fZGk6CiAgICBwYXRoOiAuLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X2RpCiAge3twcm9qZWN0X25hbWV9fV9kb21haW46CiAgICBwYXRoOiAuLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X2RvbWFpbi97e3Byb2plY3RfbmFtZX19X2RvbWFpbgogIHt7cHJvamVjdF9uYW1lfX1fdWk6CiAgICBwYXRoOiAuLi8uLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X3VpL3t7cHJvamVjdF9uYW1lfX1fdWkKICB7e3Byb2plY3RfbmFtZX19X3VpX2lvczoKICAgIHBhdGg6IC4uLy4uLy4uLy4uL3t7cHJvamVjdF9uYW1lfX1fdWkve3twcm9qZWN0X25hbWV9fV91aV9pb3MKe3svaW9zfX0Ke3sjbGludXh9fQoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojIG1lbG9zX21hbmFnZWRfZGVwZW5kZW5jeV9vdmVycmlkZXM6IHt7cHJvamVjdF9uYW1lfX1fZGkse3twcm9qZWN0X25hbWV9fV9kb21haW4se3twcm9qZWN0X25hbWV9fV91aSx7e3Byb2plY3RfbmFtZX19X3VpX2xpbnV4CmRlcGVuZGVuY3lfb3ZlcnJpZGVzOgogIHt7cHJvamVjdF9uYW1lfX1fZGk6CiAgICBwYXRoOiAuLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X2RpCiAge3twcm9qZWN0X25hbWV9fV9kb21haW46CiAgICBwYXRoOiAuLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X2RvbWFpbi97e3Byb2plY3RfbmFtZX19X2RvbWFpbgogIHt7cHJvamVjdF9uYW1lfX1fdWk6CiAgICBwYXRoOiAuLi8uLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X3VpL3t7cHJvamVjdF9uYW1lfX1fdWkKICB7e3Byb2plY3RfbmFtZX19X3VpX2xpbnV4OgogICAgcGF0aDogLi4vLi4vLi4vLi4ve3twcm9qZWN0X25hbWV9fV91aS97e3Byb2plY3RfbmFtZX19X3VpX2xpbnV4Cnt7L2xpbnV4fX0Ke3sjbWFjb3N9fQoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojIG1lbG9zX21hbmFnZWRfZGVwZW5kZW5jeV9vdmVycmlkZXM6IHt7cHJvamVjdF9uYW1lfX1fZGkse3twcm9qZWN0X25hbWV9fV9kb21haW4se3twcm9qZWN0X25hbWV9fV91aSx7e3Byb2plY3RfbmFtZX19X3VpX21hY29zCmRlcGVuZGVuY3lfb3ZlcnJpZGVzOgogIHt7cHJvamVjdF9uYW1lfX1fZGk6CiAgICBwYXRoOiAuLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X2RpCiAge3twcm9qZWN0X25hbWV9fV9kb21haW46CiAgICBwYXRoOiAuLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X2RvbWFpbi97e3Byb2plY3RfbmFtZX19X2RvbWFpbgogIHt7cHJvamVjdF9uYW1lfX1fdWk6CiAgICBwYXRoOiAuLi8uLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X3VpL3t7cHJvamVjdF9uYW1lfX1fdWkKICB7e3Byb2plY3RfbmFtZX19X3VpX21hY29zOgogICAgcGF0aDogLi4vLi4vLi4vLi4ve3twcm9qZWN0X25hbWV9fV91aS97e3Byb2plY3RfbmFtZX19X3VpX21hY29zCnt7L21hY29zfX0Ke3sjd2VifX0KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKIyBtZWxvc19tYW5hZ2VkX2RlcGVuZGVuY3lfb3ZlcnJpZGVzOiB7e3Byb2plY3RfbmFtZX19X2RpLHt7cHJvamVjdF9uYW1lfX1fZG9tYWluLHt7cHJvamVjdF9uYW1lfX1fdWkse3twcm9qZWN0X25hbWV9fV91aV93ZWIKZGVwZW5kZW5jeV9vdmVycmlkZXM6CiAge3twcm9qZWN0X25hbWV9fV9kaToKICAgIHBhdGg6IC4uLy4uLy4uL3t7cHJvamVjdF9uYW1lfX1fZGkKICB7e3Byb2plY3RfbmFtZX19X2RvbWFpbjoKICAgIHBhdGg6IC4uLy4uLy4uL3t7cHJvamVjdF9uYW1lfX1fZG9tYWluL3t7cHJvamVjdF9uYW1lfX1fZG9tYWluCiAge3twcm9qZWN0X25hbWV9fV91aToKICAgIHBhdGg6IC4uLy4uLy4uLy4uL3t7cHJvamVjdF9uYW1lfX1fdWkve3twcm9qZWN0X25hbWV9fV91aQogIHt7cHJvamVjdF9uYW1lfX1fdWlfd2ViOgogICAgcGF0aDogLi4vLi4vLi4vLi4ve3twcm9qZWN0X25hbWV9fV91aS97e3Byb2plY3RfbmFtZX19X3VpX3dlYgp7ey93ZWJ9fQp7eyN3aW5kb3dzfX0KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKIyBtZWxvc19tYW5hZ2VkX2RlcGVuZGVuY3lfb3ZlcnJpZGVzOiB7e3Byb2plY3RfbmFtZX19X2RpLHt7cHJvamVjdF9uYW1lfX1fZG9tYWluLHt7cHJvamVjdF9uYW1lfX1fdWkse3twcm9qZWN0X25hbWV9fV91aV93aW5kb3dzCmRlcGVuZGVuY3lfb3ZlcnJpZGVzOgogIHt7cHJvamVjdF9uYW1lfX1fZGk6CiAgICBwYXRoOiAuLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X2RpCiAge3twcm9qZWN0X25hbWV9fV9kb21haW46CiAgICBwYXRoOiAuLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X2RvbWFpbi97e3Byb2plY3RfbmFtZX19X2RvbWFpbgogIHt7cHJvamVjdF9uYW1lfX1fdWk6CiAgICBwYXRoOiAuLi8uLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X3VpL3t7cHJvamVjdF9uYW1lfX1fdWkKICB7e3Byb2plY3RfbmFtZX19X3VpX3dpbmRvd3M6CiAgICBwYXRoOiAuLi8uLi8uLi8uLi97e3Byb2plY3RfbmFtZX19X3VpL3t7cHJvamVjdF9uYW1lfX1fdWlfd2luZG93cwp7ey93aW5kb3dzfX0K",
      "type": "text"
    },
    {
      "path": "README.md",
      "data":
          "PCEtLQpUaGlzIFJFQURNRSBkZXNjcmliZXMgdGhlIHBhY2thZ2UuIElmIHlvdSBwdWJsaXNoIHRoaXMgcGFja2FnZSB0byBwdWIuZGV2LAp0aGlzIFJFQURNRSdzIGNvbnRlbnRzIGFwcGVhciBvbiB0aGUgbGFuZGluZyBwYWdlIGZvciB5b3VyIHBhY2thZ2UuCgpGb3IgaW5mb3JtYXRpb24gYWJvdXQgaG93IHRvIHdyaXRlIGEgZ29vZCBwYWNrYWdlIFJFQURNRSwgc2VlIHRoZSBndWlkZSBmb3IKW3dyaXRpbmcgcGFja2FnZSBwYWdlc10oaHR0cHM6Ly9kYXJ0LmRldi9ndWlkZXMvbGlicmFyaWVzL3dyaXRpbmctcGFja2FnZS1wYWdlcykuCgpGb3IgZ2VuZXJhbCBpbmZvcm1hdGlvbiBhYm91dCBkZXZlbG9waW5nIHBhY2thZ2VzLCBzZWUgdGhlIERhcnQgZ3VpZGUgZm9yCltjcmVhdGluZyBwYWNrYWdlc10oaHR0cHM6Ly9kYXJ0LmRldi9ndWlkZXMvbGlicmFyaWVzL2NyZWF0ZS1saWJyYXJ5LXBhY2thZ2VzKQphbmQgdGhlIEZsdXR0ZXIgZ3VpZGUgZm9yCltkZXZlbG9waW5nIHBhY2thZ2VzIGFuZCBwbHVnaW5zXShodHRwczovL2ZsdXR0ZXIuZGV2L2RldmVsb3BpbmctcGFja2FnZXMpLgotLT4KClRPRE86IFB1dCBhIHNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSBwYWNrYWdlIGhlcmUgdGhhdCBoZWxwcyBwb3RlbnRpYWwgdXNlcnMKa25vdyB3aGV0aGVyIHRoaXMgcGFja2FnZSBtaWdodCBiZSB1c2VmdWwgZm9yIHRoZW0uCgojIyBGZWF0dXJlcwoKVE9ETzogTGlzdCB3aGF0IHlvdXIgcGFja2FnZSBjYW4gZG8uIE1heWJlIGluY2x1ZGUgaW1hZ2VzLCBnaWZzLCBvciB2aWRlb3MuCgojIyBHZXR0aW5nIHN0YXJ0ZWQKClRPRE86IExpc3QgcHJlcmVxdWlzaXRlcyBhbmQgcHJvdmlkZSBvciBwb2ludCB0byBpbmZvcm1hdGlvbiBvbiBob3cgdG8Kc3RhcnQgdXNpbmcgdGhlIHBhY2thZ2UuCgojIyBVc2FnZQoKVE9ETzogSW5jbHVkZSBzaG9ydCBhbmQgdXNlZnVsIGV4YW1wbGVzIGZvciBwYWNrYWdlIHVzZXJzLiBBZGQgbG9uZ2VyIGV4YW1wbGVzCnRvIGAvZXhhbXBsZWAgZm9sZGVyLgoKYGBgZGFydApjb25zdCBsaWtlID0gJ3NhbXBsZSc7CmBgYAoKIyMgQWRkaXRpb25hbCBpbmZvcm1hdGlvbgoKVE9ETzogVGVsbCB1c2VycyBtb3JlIGFib3V0IHRoZSBwYWNrYWdlOiB3aGVyZSB0byBmaW5kIG1vcmUgaW5mb3JtYXRpb24sIGhvdyB0bwpjb250cmlidXRlIHRvIHRoZSBwYWNrYWdlLCBob3cgdG8gZmlsZSBpc3N1ZXMsIHdoYXQgcmVzcG9uc2UgdGhleSBjYW4gZXhwZWN0CmZyb20gdGhlIHBhY2thZ2UgYXV0aG9ycywgYW5kIG1vcmUuCg==",
      "type": "text"
    },
    {
      "path": "test/src/presentation/app_test.dart",
      "data":
          "",
      "type": "text"
    },
    {
      "path": "test/src/presentation/mocks.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOmF1dG9fcm91dGUvYXV0b19yb3V0ZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvd2lkZ2V0cy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOm1vY2t0YWlsL21vY2t0YWlsLmRhcnQnOwoKY2xhc3MgRmFrZVBhZ2VSb3V0ZUluZm8gZXh0ZW5kcyBQYWdlUm91dGVJbmZvIHsKICBjb25zdCBGYWtlUGFnZVJvdXRlSW5mbygpIDogc3VwZXIoJ3Rlc3QnKTsKfQoKY2xhc3MgRmFrZVJvdXRlciBleHRlbmRzIFJvb3RTdGFja1JvdXRlciB7CiAgQG92ZXJyaWRlCiAgTGlzdDxBdXRvUm91dGU+IGdldCByb3V0ZXMgPT4gWwogICAgICAgIEF1dG9Sb3V0ZShwYWdlOiBjb25zdCBQYWdlSW5mbygndGVzdCcpLCBwYXRoOiAnLycpLAogICAgICBdOwoKICBAb3ZlcnJpZGUKICBNYXA8U3RyaW5nLCBQYWdlRmFjdG9yeT4gZ2V0IHBhZ2VzTWFwID0+IHsKICAgICAgICAndGVzdCc6IChyb3V0ZURhdGEpID0+IEF1dG9Sb3V0ZVBhZ2UoCiAgICAgICAgICAgICAgcm91dGVEYXRhOiByb3V0ZURhdGEsCiAgICAgICAgICAgICAgY2hpbGQ6IENvbnRhaW5lcigpLAogICAgICAgICAgICApLAogICAgICB9Owp9CgpjbGFzcyBNb2NrQXV0b1JvdXRlck9ic2VydmVyIGV4dGVuZHMgTW9jayBpbXBsZW1lbnRzIEF1dG9Sb3V0ZXJPYnNlcnZlciB7fQo=",
      "type": "text"
    }
  ],
  "hooks": [],
  "name": "platform_app_feature_package",
  "description":
      "A brick generating a platform app package of a Rapid project.",
  "version": "0.1.0",
  "environment": {"mason": ">=0.1.0-dev.47 <0.1.0"},
  "readme": {
    "path": "README.md",
    "data": "IyBwbGF0Zm9ybV9hcHBfZmVhdHVyZV9wYWNrYWdlCgpUT0RP",
    "type": "text"
  },
  "changelog": {
    "path": "CHANGELOG.md",
    "data": "IyAwLjEuMAoKLSBUT0RPOiBEZXNjcmliZSBpbml0aWFsIHJlbGVhc2UuCg==",
    "type": "text"
  },
  "vars": {
    "project_name": {"type": "string", "description": "The project name"},
    "example": {
      "type": "boolean",
      "description":
          "Wheter the project contains example features and their tests"
    },
    "android": {
      "type": "boolean",
      "description": "The project supports the Android platform"
    },
    "ios": {
      "type": "boolean",
      "description": "The project supports the iOS platform"
    },
    "web": {
      "type": "boolean",
      "description": "The project supports the Web platform"
    },
    "linux": {
      "type": "boolean",
      "description": "The project supports the Linux platform"
    },
    "macos": {
      "type": "boolean",
      "description": "The project supports the macOS platform"
    },
    "windows": {
      "type": "boolean",
      "description": "The project supports the Windows platform"
    },
    "default_language": {
      "type": "string",
      "description": "The default language of the feature"
    }
  }
});
