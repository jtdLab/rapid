// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint, implicit_dynamic_list_literal, implicit_dynamic_map_literal, inference_failure_on_collection_literal

import 'package:mason/mason.dart';

final widgetBundle = MasonBundle.fromJson(<String, dynamic>{"files":[{"path":"lib/src/{{name.snakeCase()}}.dart","data":"e3teYW5kcm9pZH19e3teaW9zfX17e15saW51eH19e3tebWFjb3N9fXt7XndlYn19e3ted2luZG93c319e3tebW9iaWxlfX1pbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci93aWRnZXRzLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6e3twcm9qZWN0X25hbWUuc25ha2VDYXNlKCl9fV91aS9zcmMve3tuYW1lLnNuYWtlQ2FzZSgpfX1fdGhlbWUuZGFydCc7CgpjbGFzcyB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fSBleHRlbmRzIFN0YXRlbGVzc1dpZGdldCB7CiAgZmluYWwge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZT8gdGhlbWU7CgogIGNvbnN0IHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19KHsKICAgIHN1cGVyLmtleSwKICAgIHRoaXMudGhlbWUsCiAgfSk7CgogIEBvdmVycmlkZQogIFdpZGdldCBidWlsZChCdWlsZENvbnRleHQgY29udGV4dCkgewogICAgZmluYWwgdGhlbWUgPSB0aGlzLnRoZW1lID8/IGNvbnRleHQue3twcm9qZWN0X25hbWUuY2FtZWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lOwogICAgZmluYWwgYmFja2dyb3VuZENvbG9yID0gdGhlbWUuYmFja2dyb3VuZENvbG9yOwoKICAgIC8vIFRPRE86IGltcGxlbWVudAogICAgcmV0dXJuIENvbnRhaW5lcigKICAgICAgY29sb3I6IGJhY2tncm91bmRDb2xvciwKICAgICk7CiAgfQp9e3svbW9iaWxlfX17ey93aW5kb3dzfX17ey93ZWJ9fXt7L21hY29zfX17ey9saW51eH19e3svaW9zfX17ey9hbmRyb2lkfX0Ke3sjYW5kcm9pZH19aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTp7e3Byb2plY3RfbmFtZS5zbmFrZUNhc2UoKX19X3VpX2FuZHJvaWQvc3JjL3t7bmFtZS5zbmFrZUNhc2UoKX19X3RoZW1lLmRhcnQnOwoKY2xhc3Mge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX0gZXh0ZW5kcyBTdGF0ZWxlc3NXaWRnZXQgewogIGZpbmFsIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWU/IHRoZW1lOwoKICBjb25zdCB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fSh7CiAgICBzdXBlci5rZXksCiAgICB0aGlzLnRoZW1lLAogIH0pOwoKICBAb3ZlcnJpZGUKICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsKICAgIGZpbmFsIHRoZW1lID0gdGhpcy50aGVtZSA/PyBjb250ZXh0Lnt7cHJvamVjdF9uYW1lLmNhbWVsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZTsKICAgIGZpbmFsIGJhY2tncm91bmRDb2xvciA9IHRoZW1lLmJhY2tncm91bmRDb2xvcjsKCiAgICAvLyBUT0RPOiBpbXBsZW1lbnQKICAgIHJldHVybiBDb250YWluZXIoCiAgICAgIGNvbG9yOiBiYWNrZ3JvdW5kQ29sb3IsCiAgICApOwogIH0KfXt7L2FuZHJvaWR9fXt7I2lvc319aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvY3VwZXJ0aW5vLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6e3twcm9qZWN0X25hbWUuc25ha2VDYXNlKCl9fV91aV9pb3Mvc3JjL3t7bmFtZS5zbmFrZUNhc2UoKX19X3RoZW1lLmRhcnQnOwoKY2xhc3Mge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX0gZXh0ZW5kcyBTdGF0ZWxlc3NXaWRnZXQgewogIGZpbmFsIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWU/IHRoZW1lOwoKICBjb25zdCB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fSh7CiAgICBzdXBlci5rZXksCiAgICB0aGlzLnRoZW1lLAogIH0pOwoKICBAb3ZlcnJpZGUKICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsKICAgIGZpbmFsIHRoZW1lID0gdGhpcy50aGVtZSA/PyBjb250ZXh0Lnt7cHJvamVjdF9uYW1lLmNhbWVsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZTsKICAgIGZpbmFsIGJhY2tncm91bmRDb2xvciA9IHRoZW1lLmJhY2tncm91bmRDb2xvcjsKCiAgICAvLyBUT0RPOiBpbXBsZW1lbnQKICAgIHJldHVybiBDb250YWluZXIoCiAgICAgIGNvbG9yOiBiYWNrZ3JvdW5kQ29sb3IsCiAgICApOwogIH0KfXt7L2lvc319e3sjbGludXh9fWltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6e3twcm9qZWN0X25hbWUuc25ha2VDYXNlKCl9fV91aV9saW51eC9zcmMve3tuYW1lLnNuYWtlQ2FzZSgpfX1fdGhlbWUuZGFydCc7CgpjbGFzcyB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fSBleHRlbmRzIFN0YXRlbGVzc1dpZGdldCB7CiAgZmluYWwge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZT8gdGhlbWU7CgogIGNvbnN0IHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19KHsKICAgIHN1cGVyLmtleSwKICAgIHRoaXMudGhlbWUsCiAgfSk7CgogIEBvdmVycmlkZQogIFdpZGdldCBidWlsZChCdWlsZENvbnRleHQgY29udGV4dCkgewogICAgZmluYWwgdGhlbWUgPSB0aGlzLnRoZW1lID8/IGNvbnRleHQue3twcm9qZWN0X25hbWUuY2FtZWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lOwogICAgZmluYWwgYmFja2dyb3VuZENvbG9yID0gdGhlbWUuYmFja2dyb3VuZENvbG9yOwoKICAgIC8vIFRPRE86IGltcGxlbWVudAogICAgcmV0dXJuIENvbnRhaW5lcigKICAgICAgY29sb3I6IGJhY2tncm91bmRDb2xvciwKICAgICk7CiAgfQp9e3svbGludXh9fXt7I21hY29zfX1pbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9jdXBlcnRpbm8uZGFydCc7CmltcG9ydCAncGFja2FnZTp7e3Byb2plY3RfbmFtZS5zbmFrZUNhc2UoKX19X3VpX21hY29zL3NyYy97e25hbWUuc25ha2VDYXNlKCl9fV90aGVtZS5kYXJ0JzsKCmNsYXNzIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19IGV4dGVuZHMgU3RhdGVsZXNzV2lkZ2V0IHsKICBmaW5hbCB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lPyB0aGVtZTsKCiAgY29uc3Qge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX0oewogICAgc3VwZXIua2V5LAogICAgdGhpcy50aGVtZSwKICB9KTsKCiAgQG92ZXJyaWRlCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0KSB7CiAgICBmaW5hbCB0aGVtZSA9IHRoaXMudGhlbWUgPz8gY29udGV4dC57e3Byb2plY3RfbmFtZS5jYW1lbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWU7CiAgICBmaW5hbCBiYWNrZ3JvdW5kQ29sb3IgPSB0aGVtZS5iYWNrZ3JvdW5kQ29sb3I7CgogICAgLy8gVE9ETzogaW1wbGVtZW50CiAgICByZXR1cm4gQ29udGFpbmVyKAogICAgICBjb2xvcjogYmFja2dyb3VuZENvbG9yLAogICAgKTsKICB9Cn17ey9tYWNvc319e3sjd2VifX1pbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOnt7cHJvamVjdF9uYW1lLnNuYWtlQ2FzZSgpfX1fdWlfd2ViL3NyYy97e25hbWUuc25ha2VDYXNlKCl9fV90aGVtZS5kYXJ0JzsKCmNsYXNzIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19IGV4dGVuZHMgU3RhdGVsZXNzV2lkZ2V0IHsKICBmaW5hbCB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lPyB0aGVtZTsKCiAgY29uc3Qge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX0oewogICAgc3VwZXIua2V5LAogICAgdGhpcy50aGVtZSwKICB9KTsKCiAgQG92ZXJyaWRlCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0KSB7CiAgICBmaW5hbCB0aGVtZSA9IHRoaXMudGhlbWUgPz8gY29udGV4dC57e3Byb2plY3RfbmFtZS5jYW1lbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWU7CiAgICBmaW5hbCBiYWNrZ3JvdW5kQ29sb3IgPSB0aGVtZS5iYWNrZ3JvdW5kQ29sb3I7CgogICAgLy8gVE9ETzogaW1wbGVtZW50CiAgICByZXR1cm4gQ29udGFpbmVyKAogICAgICBjb2xvcjogYmFja2dyb3VuZENvbG9yLAogICAgKTsKICB9Cn17ey93ZWJ9fXt7I3dpbmRvd3N9fWltcG9ydCAncGFja2FnZTpmbHVlbnRfdWkvZmx1ZW50X3VpLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6e3twcm9qZWN0X25hbWUuc25ha2VDYXNlKCl9fV91aV93aW5kb3dzL3NyYy97e25hbWUuc25ha2VDYXNlKCl9fV90aGVtZS5kYXJ0JzsKCmNsYXNzIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19IGV4dGVuZHMgU3RhdGVsZXNzV2lkZ2V0IHsKICBmaW5hbCB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lPyB0aGVtZTsKCiAgY29uc3Qge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX0oewogICAgc3VwZXIua2V5LAogICAgdGhpcy50aGVtZSwKICB9KTsKCiAgQG92ZXJyaWRlCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0KSB7CiAgICBmaW5hbCB0aGVtZSA9IHRoaXMudGhlbWUgPz8gY29udGV4dC57e3Byb2plY3RfbmFtZS5jYW1lbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWU7CiAgICBmaW5hbCBiYWNrZ3JvdW5kQ29sb3IgPSB0aGVtZS5iYWNrZ3JvdW5kQ29sb3I7CgogICAgLy8gVE9ETzogaW1wbGVtZW50CiAgICByZXR1cm4gQ29udGFpbmVyKAogICAgICBjb2xvcjogYmFja2dyb3VuZENvbG9yLAogICAgKTsKICB9Cn17ey93aW5kb3dzfX17eyNtb2JpbGV9fWltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6e3twcm9qZWN0X25hbWUuc25ha2VDYXNlKCl9fV91aV9tb2JpbGUvc3JjL3t7bmFtZS5zbmFrZUNhc2UoKX19X3RoZW1lLmRhcnQnOwoKY2xhc3Mge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX0gZXh0ZW5kcyBTdGF0ZWxlc3NXaWRnZXQgewogIGZpbmFsIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWU/IHRoZW1lOwoKICBjb25zdCB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fSh7CiAgICBzdXBlci5rZXksCiAgICB0aGlzLnRoZW1lLAogIH0pOwoKICBAb3ZlcnJpZGUKICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsKICAgIGZpbmFsIHRoZW1lID0gdGhpcy50aGVtZSA/PyBjb250ZXh0Lnt7cHJvamVjdF9uYW1lLmNhbWVsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZTsKICAgIGZpbmFsIGJhY2tncm91bmRDb2xvciA9IHRoZW1lLmJhY2tncm91bmRDb2xvcjsKCiAgICAvLyBUT0RPOiBpbXBsZW1lbnQKICAgIHJldHVybiBDb250YWluZXIoCiAgICAgIGNvbG9yOiBiYWNrZ3JvdW5kQ29sb3IsCiAgICApOwogIH0KfXt7L21vYmlsZX19Cg==","type":"text"},{"path":"lib/src/{{name.snakeCase()}}_theme.dart","data":"e3teYW5kcm9pZH19e3teaW9zfX17e15saW51eH19e3tebWFjb3N9fXt7XndlYn19e3ted2luZG93c319e3tebW9iaWxlfX1pbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9mb3VuZGF0aW9uLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JyBzaG93IFRoZW1lLCBUaGVtZUV4dGVuc2lvbjsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvd2lkZ2V0cy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOnRoZW1lX3RhaWxvcl9hbm5vdGF0aW9uL3RoZW1lX3RhaWxvcl9hbm5vdGF0aW9uLmRhcnQnOwoKcGFydCAne3tuYW1lLnNuYWtlQ2FzZSgpfX1fdGhlbWUudGFpbG9yLmRhcnQnOwoKQFRhaWxvcih0aGVtZUdldHRlcjogVGhlbWVHZXR0ZXIub25CdWlsZENvbnRleHQpCmNsYXNzIF8ke3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZSB7CiAgc3RhdGljIExpc3Q8Q29sb3I+IGJhY2tncm91bmRDb2xvciA9IFsKICAgIGNvbnN0IENvbG9yKDB4RkZGRkZGRkYpLAogICAgY29uc3QgQ29sb3IoMHhGRjAwMDAwMCksCiAgXTsKfXt7L21vYmlsZX19e3svd2luZG93c319e3svd2VifX17ey9tYWNvc319e3svbGludXh9fXt7L2lvc319e3svYW5kcm9pZH19e3sjYW5kcm9pZH19aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvZm91bmRhdGlvbi5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCcgc2hvdyBUaGVtZSwgVGhlbWVFeHRlbnNpb247CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL3dpZGdldHMuZGFydCc7CmltcG9ydCAncGFja2FnZTp0aGVtZV90YWlsb3JfYW5ub3RhdGlvbi90aGVtZV90YWlsb3JfYW5ub3RhdGlvbi5kYXJ0JzsKCnBhcnQgJ3t7bmFtZS5zbmFrZUNhc2UoKX19X3RoZW1lLnRhaWxvci5kYXJ0JzsKCkBUYWlsb3IodGhlbWVHZXR0ZXI6IFRoZW1lR2V0dGVyLm9uQnVpbGRDb250ZXh0KQpjbGFzcyBfJHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWUgewogIHN0YXRpYyBMaXN0PENvbG9yPiBiYWNrZ3JvdW5kQ29sb3IgPSBbCiAgICBjb25zdCBDb2xvcigweEZGRkZGRkZGKSwKICAgIGNvbnN0IENvbG9yKDB4RkYwMDAwMDApLAogIF07Cn0Ke3svYW5kcm9pZH19e3sjaW9zfX1pbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9mb3VuZGF0aW9uLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JyBzaG93IFRoZW1lLCBUaGVtZUV4dGVuc2lvbjsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvd2lkZ2V0cy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOnRoZW1lX3RhaWxvcl9hbm5vdGF0aW9uL3RoZW1lX3RhaWxvcl9hbm5vdGF0aW9uLmRhcnQnOwoKcGFydCAne3tuYW1lLnNuYWtlQ2FzZSgpfX1fdGhlbWUudGFpbG9yLmRhcnQnOwoKQFRhaWxvcih0aGVtZUdldHRlcjogVGhlbWVHZXR0ZXIub25CdWlsZENvbnRleHQpCmNsYXNzIF8ke3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZSB7CiAgc3RhdGljIExpc3Q8Q29sb3I+IGJhY2tncm91bmRDb2xvciA9IFsKICAgIGNvbnN0IENvbG9yKDB4RkZGRkZGRkYpLAogICAgY29uc3QgQ29sb3IoMHhGRjAwMDAwMCksCiAgXTsKfQp7ey9pb3N9fXt7I2xpbnV4fX1pbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9mb3VuZGF0aW9uLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JyBzaG93IFRoZW1lLCBUaGVtZUV4dGVuc2lvbjsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvd2lkZ2V0cy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOnRoZW1lX3RhaWxvcl9hbm5vdGF0aW9uL3RoZW1lX3RhaWxvcl9hbm5vdGF0aW9uLmRhcnQnOwoKcGFydCAne3tuYW1lLnNuYWtlQ2FzZSgpfX1fdGhlbWUudGFpbG9yLmRhcnQnOwoKQFRhaWxvcih0aGVtZUdldHRlcjogVGhlbWVHZXR0ZXIub25CdWlsZENvbnRleHQpCmNsYXNzIF8ke3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZSB7CiAgc3RhdGljIExpc3Q8Q29sb3I+IGJhY2tncm91bmRDb2xvciA9IFsKICAgIGNvbnN0IENvbG9yKDB4RkZGRkZGRkYpLAogICAgY29uc3QgQ29sb3IoMHhGRjAwMDAwMCksCiAgXTsKfQp7ey9saW51eH19e3sjbWFjb3N9fWltcG9ydCAncGFja2FnZTpmbHV0dGVyL2ZvdW5kYXRpb24uZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnIHNob3cgVGhlbWUsIFRoZW1lRXh0ZW5zaW9uOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci93aWRnZXRzLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6dGhlbWVfdGFpbG9yX2Fubm90YXRpb24vdGhlbWVfdGFpbG9yX2Fubm90YXRpb24uZGFydCc7CgpwYXJ0ICd7e25hbWUuc25ha2VDYXNlKCl9fV90aGVtZS50YWlsb3IuZGFydCc7CgpAVGFpbG9yKHRoZW1lR2V0dGVyOiBUaGVtZUdldHRlci5vbkJ1aWxkQ29udGV4dCkKY2xhc3MgXyR7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lIHsKICBzdGF0aWMgTGlzdDxDb2xvcj4gYmFja2dyb3VuZENvbG9yID0gWwogICAgY29uc3QgQ29sb3IoMHhGRkZGRkZGRiksCiAgICBjb25zdCBDb2xvcigweEZGMDAwMDAwKSwKICBdOwp9Cnt7L21hY29zfX17eyN3ZWJ9fWltcG9ydCAncGFja2FnZTpmbHV0dGVyL2ZvdW5kYXRpb24uZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnIHNob3cgVGhlbWUsIFRoZW1lRXh0ZW5zaW9uOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci93aWRnZXRzLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6dGhlbWVfdGFpbG9yX2Fubm90YXRpb24vdGhlbWVfdGFpbG9yX2Fubm90YXRpb24uZGFydCc7CgpwYXJ0ICd7e25hbWUuc25ha2VDYXNlKCl9fV90aGVtZS50YWlsb3IuZGFydCc7CgpAVGFpbG9yKHRoZW1lR2V0dGVyOiBUaGVtZUdldHRlci5vbkJ1aWxkQ29udGV4dCkKY2xhc3MgXyR7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lIHsKICBzdGF0aWMgTGlzdDxDb2xvcj4gYmFja2dyb3VuZENvbG9yID0gWwogICAgY29uc3QgQ29sb3IoMHhGRkZGRkZGRiksCiAgICBjb25zdCBDb2xvcigweEZGMDAwMDAwKSwKICBdOwp9Cnt7L3dlYn19e3sjd2luZG93c319aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvZm91bmRhdGlvbi5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCcgc2hvdyBUaGVtZSwgVGhlbWVFeHRlbnNpb247CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL3dpZGdldHMuZGFydCc7CmltcG9ydCAncGFja2FnZTp0aGVtZV90YWlsb3JfYW5ub3RhdGlvbi90aGVtZV90YWlsb3JfYW5ub3RhdGlvbi5kYXJ0JzsKCnBhcnQgJ3t7bmFtZS5zbmFrZUNhc2UoKX19X3RoZW1lLnRhaWxvci5kYXJ0JzsKCkBUYWlsb3IodGhlbWVHZXR0ZXI6IFRoZW1lR2V0dGVyLm9uQnVpbGRDb250ZXh0KQpjbGFzcyBfJHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWUgewogIHN0YXRpYyBMaXN0PENvbG9yPiBiYWNrZ3JvdW5kQ29sb3IgPSBbCiAgICBjb25zdCBDb2xvcigweEZGRkZGRkZGKSwKICAgIGNvbnN0IENvbG9yKDB4RkYwMDAwMDApLAogIF07Cn0Ke3svd2luZG93c319e3sjbW9iaWxlfX1pbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9mb3VuZGF0aW9uLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JyBzaG93IFRoZW1lLCBUaGVtZUV4dGVuc2lvbjsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvd2lkZ2V0cy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOnRoZW1lX3RhaWxvcl9hbm5vdGF0aW9uL3RoZW1lX3RhaWxvcl9hbm5vdGF0aW9uLmRhcnQnOwoKcGFydCAne3tuYW1lLnNuYWtlQ2FzZSgpfX1fdGhlbWUudGFpbG9yLmRhcnQnOwoKQFRhaWxvcih0aGVtZUdldHRlcjogVGhlbWVHZXR0ZXIub25CdWlsZENvbnRleHQpCmNsYXNzIF8ke3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZSB7CiAgc3RhdGljIExpc3Q8Q29sb3I+IGJhY2tncm91bmRDb2xvciA9IFsKICAgIGNvbnN0IENvbG9yKDB4RkZGRkZGRkYpLAogICAgY29uc3QgQ29sb3IoMHhGRjAwMDAwMCksCiAgXTsKfQp7ey9tb2JpbGV9fQo=","type":"text"},{"path":"lib/src/{{name.snakeCase()}}_theme.tailor.dart","data":"Ly8gY292ZXJhZ2U6aWdub3JlLWZpbGUKLy8gR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZIEJZIEhBTkQKLy8gaWdub3JlX2Zvcl9maWxlOiB0eXBlPWxpbnQsIHVudXNlZF9lbGVtZW50CgpwYXJ0IG9mICd7e25hbWUuc25ha2VDYXNlKCl9fV90aGVtZS5kYXJ0JzsKCi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi8vIFRoZW1lVGFpbG9yR2VuZXJhdG9yCi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgpjbGFzcyB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lIGV4dGVuZHMgVGhlbWVFeHRlbnNpb248e3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZT4KICAgIHdpdGggRGlhZ25vc3RpY2FibGVUcmVlTWl4aW4gewogIGNvbnN0IHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWUoewogICAgcmVxdWlyZWQgdGhpcy5iYWNrZ3JvdW5kQ29sb3IsCiAgfSk7CgogIGZpbmFsIENvbG9yIGJhY2tncm91bmRDb2xvcjsKCiAgc3RhdGljIGZpbmFsIHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWUgbGlnaHQgPSB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lKAogICAgYmFja2dyb3VuZENvbG9yOiBfJHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWUuYmFja2dyb3VuZENvbG9yWzBdLAogICk7CgogIHN0YXRpYyBmaW5hbCB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lIGRhcmsgPSB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lKAogICAgYmFja2dyb3VuZENvbG9yOiBfJHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWUuYmFja2dyb3VuZENvbG9yWzFdLAogICk7CgogIHN0YXRpYyBmaW5hbCB0aGVtZXMgPSBbCiAgICBsaWdodCwKICAgIGRhcmssCiAgXTsKCiAgQG92ZXJyaWRlCiAge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZSBjb3B5V2l0aCh7CiAgICBDb2xvcj8gYmFja2dyb3VuZENvbG9yLAogIH0pIHsKICAgIHJldHVybiB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lKAogICAgICBiYWNrZ3JvdW5kQ29sb3I6IGJhY2tncm91bmRDb2xvciA/PyB0aGlzLmJhY2tncm91bmRDb2xvciwKICAgICk7CiAgfQoKICBAb3ZlcnJpZGUKICB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lIGxlcnAoCiAgICAgIFRoZW1lRXh0ZW5zaW9uPHt7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWU+PyBvdGhlciwgZG91YmxlIHQpIHsKICAgIGlmIChvdGhlciBpcyEge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZSkgcmV0dXJuIHRoaXM7CiAgICByZXR1cm4ge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZSgKICAgICAgYmFja2dyb3VuZENvbG9yOiBDb2xvci5sZXJwKGJhY2tncm91bmRDb2xvciwgb3RoZXIuYmFja2dyb3VuZENvbG9yLCB0KSEsCiAgICApOwogIH0KCiAgQG92ZXJyaWRlCiAgdm9pZCBkZWJ1Z0ZpbGxQcm9wZXJ0aWVzKERpYWdub3N0aWNQcm9wZXJ0aWVzQnVpbGRlciBwcm9wZXJ0aWVzKSB7CiAgICBzdXBlci5kZWJ1Z0ZpbGxQcm9wZXJ0aWVzKHByb3BlcnRpZXMpOwogICAgcHJvcGVydGllcwogICAgICAuLmFkZChEaWFnbm9zdGljc1Byb3BlcnR5KCd0eXBlJywgJ3t7cHJvamVjdF9uYW1lLnBhc2NhbENhc2UoKX19e3tuYW1lLnBhc2NhbENhc2UoKX19VGhlbWUnKSkKICAgICAgLi5hZGQoRGlhZ25vc3RpY3NQcm9wZXJ0eSgnYmFja2dyb3VuZENvbG9yJywgYmFja2dyb3VuZENvbG9yKSk7CiAgfQoKICBAb3ZlcnJpZGUKICBib29sIG9wZXJhdG9yID09KE9iamVjdCBvdGhlcikgewogICAgcmV0dXJuIGlkZW50aWNhbCh0aGlzLCBvdGhlcikgfHwKICAgICAgICAob3RoZXIucnVudGltZVR5cGUgPT0gcnVudGltZVR5cGUgJiYKICAgICAgICAgICAgb3RoZXIgaXMge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZSAmJgogICAgICAgICAgICBjb25zdCBEZWVwQ29sbGVjdGlvbkVxdWFsaXR5KCkKICAgICAgICAgICAgICAgIC5lcXVhbHMoYmFja2dyb3VuZENvbG9yLCBvdGhlci5iYWNrZ3JvdW5kQ29sb3IpKTsKICB9CgogIEBvdmVycmlkZQogIGludCBnZXQgaGFzaENvZGUgewogICAgcmV0dXJuIE9iamVjdC5oYXNoKAogICAgICAgIHJ1bnRpbWVUeXBlLCBjb25zdCBEZWVwQ29sbGVjdGlvbkVxdWFsaXR5KCkuaGFzaChiYWNrZ3JvdW5kQ29sb3IpKTsKICB9Cn0KCmV4dGVuc2lvbiB7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lQnVpbGRDb250ZXh0IG9uIEJ1aWxkQ29udGV4dCB7CiAge3twcm9qZWN0X25hbWUucGFzY2FsQ2FzZSgpfX17e25hbWUucGFzY2FsQ2FzZSgpfX1UaGVtZSBnZXQge3twcm9qZWN0X25hbWUuY2FtZWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lID0+CiAgICAgIFRoZW1lLm9mKHRoaXMpLmV4dGVuc2lvbjx7e3Byb2plY3RfbmFtZS5wYXNjYWxDYXNlKCl9fXt7bmFtZS5wYXNjYWxDYXNlKCl9fVRoZW1lPigpITsKfQo=","type":"text"},{"path":"test/src/{{name.snakeCase()}}_test.dart","data":"","type":"text"},{"path":"test/src/{{name.snakeCase()}}_theme_test.dart","data":"","type":"text"}],"hooks":[],"name":"widget","description":"A brick generating a widget of a platform ui package of a Rapid project.","version":"0.1.0","environment":{"mason":">=0.1.0-dev <0.1.0"},"readme":{"path":"README.md","data":"IyBlbnRpdHkKClRPRE8=","type":"text"},"changelog":{"path":"CHANGELOG.md","data":"IyAwLjEuMAoKLSBUT0RPOiBEZXNjcmliZSBpbml0aWFsIHJlbGVhc2UuCg==","type":"text"},"vars":{"project_name":{"type":"string"},"name":{"type":"string"},"android":{"type":"boolean","description":"Wheter is Android widget"},"ios":{"type":"boolean","description":"Wheter is iOS widget"},"web":{"type":"boolean","description":"Wheter is Web widget"},"linux":{"type":"boolean","description":"Wheter is Linux widget"},"macos":{"type":"boolean","description":"Wheter is macOS widget"},"windows":{"type":"boolean","description":"Wheter is Windows widget"},"mobile":{"type":"boolean","description":"Wheter is Mobile widget"}}});